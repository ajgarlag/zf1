<sect1 id="zend.timesync.queries">
    <title>Querying timeservers</title>
    <para>
        General information about querying timeservers goes here.
    </para>
    <sect2 id="zend.timesync.queries.ntp">
        <title>Basic NTP query</title>
        <para>
            Querying the time from a NTP server with a standard port
        </para>
        <programlisting role="php"><![CDATA[<?php
$server = new Zend_TimeSync('ntp://serveraddress', 'alias'); 
$result = $server->getDate(); 
 
echo $result->getIso();
    ]]>
        </programlisting>
    </sect2>
    <sect2 id="zend.timesync.queries.sntp">
        <title>Basic SNTP query</title>
        <para>
            Querying the time from a SNTP server with a standard port
        </para>
        <programlisting role="php"><![CDATA[<?php
$server = new Zend_TimeSync('sntp://serveraddress', 'alias'); 
$result = $server->getDate(); 
 
echo $result->getIso();
        ]]>
        </programlisting>
    </sect2>
    <sect2 id="zend.timesync.queries.fallback">
        <title>Using the fallback mechanism</title>
        <para>
            Querying the time from an NTP server with a standard port, and a list of NTP/SNTP 
            fallback servers provided:
        </para>
        <programlisting role="php"><![CDATA[<?php
$serverlist = array('alias_a' => 'ntp://address', 
                    'alias_b' => 'ntp://address', 
                    'alias_c' => 'sntp://address'); 
 
$server = new Zend_TimeSync($serverlist); 
$result = $server->getDate(); 
 
echo $result->getIso(); 
    ]]>
        </programlisting>
        <para>
            Querying the time from an NTP server with a non standard port, and with a 
            list of NTP/SNTP fallback servers that run on a non standard port:
        </para>
        <programlisting role="php"><![CDATA[<?php
$serverlist = array('alias_a' => 'ntp://address:2222', 
                    'alias_b' => 'ntp://address:2222', 
                    'alias_c' => 'sntp://address:3333'); 
 
$server = new Zend_TimeSync($serverlist); 
$result = $server->getDate(); 
 
echo $result->getIso(); 
    ]]>
        </programlisting>
    </sect2>
    <sect2 id="zend.timesync.queries.exceptions">
        <title>Taking care of exceptions</title>
        <para>
            Taking care of exceptions:
        </para>
        <programlisting role="php"><![CDATA[<?php
$serverlist = array(
        // invalid servers
        'server_a'  => 'ntp://be.foo.bar.org',
        'server_b'  => 'sntp://be.foo.bar.org',
); 

$server = new Zend_TimeSync($serverlist);

try {
    $result = $server->getDate();
    echo $result->getIso();
} catch (Zend_TimeSync_Exception $e) {
    
    $exceptions = $e->get();
    
    foreach ($exceptions as $key => $myException) {
        echo $myException->getMessage();
        echo '<br />';
    }
}
    ]]>
        </programlisting>
    </sect2>
</sect1>
