<sect1 id="zend.mail.attachments">
    <title>Attachments</title>
    <para>
        Files can be attached to an e-mail using the <code>addAttachment()</code> method. <code>Zend_Mail</code>
        expects attachments to be objects of type <code>Zend_Mime_Part</code>, which can either be generated
        manually or via the <code>createAttachment()</code> method. To create an attachment using the latter,
        you need to pass a binary-safe string to <code>createAttachment()</code>. This method will assume the 
        attachment should be created as a binary object (application/octet-stream), transferred with base64 
        encoding and handled as inline-disposition. These assumptions can be overridden by passing more
        parameters to <code>createAttachment()</code> as shown:
    </para>
    <example>
        <title>E-Mail Messages with Attachments</title>
        <programlisting role="php"><![CDATA[
<?php
require_once 'Zend/Mail.php';
$mail = new Zend_Mail();
// build message...

$at = $mail->createAttachment($someBinaryString);

// or alternatively passing default parameters to the attachment
$at = $mail->createAttachment($myImage, 'image/gif', Zend_Mime::DISPOSITION_INLINE,
                              Zend_Mime::ENCODING_8BIT, 'myimage.gif');
$mail->addAttachment($at);
?>]]>   </programlisting>
    </example>
    <para>
        If you want more control over the MIME part generated for this attachment you can use the return value
        of <code>createAttachment()</code> to modify its attributes. The <code>createAttachment()</code> method
        returns a <code>Zend_Mime_Part</code> object:
    </para>
    <programlisting role="php"><![CDATA[
<?php
require_once 'Zend/Mail.php';
$mail = new Zend_Mail();

$at = $mail->createAttachment($myImage);

$at->type        = 'image/gif';
$at->disposition = Zend_Mime::DISPOSITION_INLINE;
$at->encoding    = Zend_Mime::ENCODING_8BIT;
$at->filename    = 'test.gif';

$mail->addAttachment($at);
$mail->send();
?>]]></programlisting>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
