<sect1 id="zend.config.adapters.ini">
    <title>Zend_Config_Ini</title>
    <para>
        <code>Zend_Config_Ini</code> дает разработчикам возможность хранить
        конфигурационные данные в знакомом большинству формате INI и читать
        их в приложении с использованием синтаксиса вложенных свойств объекта.
        Формат INI специализируется на обеспечении иерархии конфигурационных
        данных и наследования между разделами конфигурационных данных.
        Иерархии конфигурационных данных поддерживаются посредством
        разделения ключей точкой (<code>.</code>). Раздел можно расширять
        или наследовать от другого раздела посредством указания имени раздела
        с двоеточием (<code>:</code>) и имени раздела, от которого наследуются
        данные.
<!--
        <code>Zend_Config_Ini</code> enables developers to store configuration
        data in a familiar INI format and read them in the application by using
        nested object property syntax. The INI format is specialized to provide
        both the ability to have a hierarchy of configuration data keys and
        inheritance between configuration data sections. Configuration data
        hierarchies are supported by separating the keys with the dot or
        period character (<code>.</code>). A section may extend or inherit
        from another section by following the section name with a colon character
        (<code>:</code>) and the name of the section from which data are to be
        inherited.
-->
    </para>
    <note>
        <title>parse_ini_file</title>
        <para>
            <code>Zend_Config_Ini</code> использует функцию PHP
            <ulink url="http://php.net/parse_ini_file"><code>parse_ini_file()</code></ulink>.
            Пожалуйста, почитайте документацию, чтобы знать
            особенности ее поведения, которые распространяются и на
            <code>Zend_Config_Ini</code> — например, о том, как обрабатываются
            специальные значения <code>true</code>, <code>false</code>, <code>yes</code>,
            <code>no</code> и <code>null</code>.
<!--
            <code>Zend_Config_Ini</code> utilizes the
            <ulink url="http://php.net/parse_ini_file"><code>parse_ini_file()</code></ulink>
            PHP function. Please review this documentation to be aware of its specific
            behaviors, which propagate to <code>Zend_Config_Ini</code>, such as how
            the special values of <code>true</code>, <code>false</code>, <code>yes</code>,
            <code>no</code>, and <code>null</code> are handled.
-->
        </para>
    </note>
        <note>
        <title>Разделитель ключей<!--Key Separator--></title>
        <para>
            По умолчанию разделителем ключей является символ точки
            (<code>.</code>). Он может быть заменен на любой другой посредством
            изменения ключа <code>'nestSeparator'</code> в <code>$config</code>
            при создании объекта <code>Zend_Config_Ini</code>. Например:
<!--
            By default, the key separator character is the period character (<code>.</code>). This can be changed,
            however, by changing the <code>$config</code> key <code>'nestSeparator'</code> when constructing the
            <code>Zend_Config_Ini</code> object. For example:
-->
            <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Config/Ini.php';
$config['nestSeparator'] = ':';
$config = new Zend_Config_Ini('/path/to/config.ini', 'staging', $config);]]></programlisting>
        </para>
    </note>
    <example id="zend.config.adapters.ini.example.using">
        <title>Использование Zend_Config_Ini<!--Using Zend_Config_Ini--></title>
        <para>
            Данный пример демонстрирует основы использования <code>Zend_Config_Ini</code>
            для загрузки конфигурационных данных из файла INI. В этом примере
            используются конфигурационные данные для производственной и
            промежуточной систем. Поскольку конфигурационные данные
            промежуточной системы очень похожи на конфигурационные данные для
            производственной системы, то "промежуточный" (staging) раздел наследует от
            "производственного" (production) раздела. В данном случае выбор
            произвольный, т.е. может быть и наоборот — "производственный"
            раздел наследует от "промежуточного", но это может не подходить в
            более сложных случаях. Допустим, конфигурационные данные
            находятся в файле <code>/path/to/config.ini</code>:
<!--
            This example illustrates a basic use of <code>Zend_Config_Ini</code>
            for loading configuration data from an INI file. In this example
            there are configuration data for both a production system and for a
            staging system. Because the staging system configuration data are
            very similar to those for production, the staging section inherits
            from the production section. In this case, the decision is arbitrary
            and could have been written conversely, with the production section
            inheriting from the staging section, though this may not be the case
            for more complex situations. Suppose, then, that the following
            configuration data are contained in <code>/path/to/config.ini</code>:
-->
        </para>
        <programlisting role="ini"><![CDATA[; Production site configuration data
[production]
webhost           = www.example.com
database.type     = pdo_mysql
database.host     = db.example.com
database.username = dbuser
database.password = secret
database.name     = dbname

; Staging site configuration data inherits from production and
; overrides values as necessary
[staging : production]
database.host     = dev.example.com
database.username = devuser
database.password = devsecret]]></programlisting>
        <para>
            Далее предположим, что разработчику приложения нужны "промежуточные"
            конфигурационные данные из файла INI. Загрузить эти данные через
            указание файла INI и нужного раздела довольно просто:
<!--
            Next, assume that the application developer needs the staging
            configuration data from the INI file. It is a simple matter to load
            these data by specifying the INI file and the staging section:
-->
        </para>
        <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Config/Ini.php';

$config = new Zend_Config_Ini('/path/to/config.ini', 'staging');

echo $config->database->host; // выведет "dev.example.com"
echo $config->database->name; // выведет "dbname"]]></programlisting>
    </example>
    <note>
    <table>
        <title>Параметры конструктора Zend_Config_Ini<!--Zend_Config_Ini Constructor parameters--></title>
        <tgroup cols="2">
            <thead>
                  <row>
                    <entry>Параметр<!--Parameter--></entry>
                    <entry>Примечание<!--Notes--></entry>
                </row>
            </thead>
            <tbody>
                <row>
                    <entry><code>$filename</code></entry>
                    <entry>INI-файл для загрузки<!--The INI file to load.--></entry>
                </row>
                <row>
                    <entry><code>$section</code></entry>
                    <entry>
                        Раздел в INI-файле, который должен быть загружен.
                        Установка этого параметра в null вызовет загрузку всех
                        разделов. Также может быть передан массив имен разделов
                        для загрузки нескольких разделов.
<!--
                        The [section] within the ini file that is to be loaded. Setting
                        this parameter to null will load all sections. Alternatively, an
                        array of section names may be supplied to load multiple sections.
-->
                    </entry>
                </row>
                <row>
                    <entry><code>$config = false</code></entry>
                    <entry>
                        Конфигурационный массив. Поддерживаются следующие ключи:
<!--
                        Configuration array. The following keys are supported:
-->
                        <itemizedlist>
                            <listitem>
                                <para>
                                    <emphasis>allowModifications</emphasis>:
                                    Устанавливается в true, чтобы разрешить
                                    последующую модификацию загруженного файла.
                                    По умолчанию установлен в false
<!--
                                    <emphasis>allowModifications</emphasis>: Set to true to allow subsequent modification of loaded file. Defaults to false
-->
                                </para>
                            </listitem>
                            <listitem>
                                <para>
                                    <emphasis>nestSeparator</emphasis>:
                                    Задает символ, используемый в качестве
                                    разделителя узлов. По умолчанию это "."
<!--
                                    <emphasis>nestSeparator</emphasis>: Set to the character to be used as the nest separator. Defaults to "."
-->
                                </para>
                            </listitem>
                        </itemizedlist>
                    </entry>
                </row>
            </tbody>
        </tgroup>
    </table>
    </note>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
