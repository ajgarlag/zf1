<sect1 id="zend.cache.backends">
    <title>Бэкэнды Zend_Cache<!--Zend_Cache backends--></title>

    <sect2 id="zend.cache.backends.file">
        <title>Zend_Cache_Backend_File</title>
        <para>
            Этот бэкэнд хранит записи кэша в файлах (в выбранной директории)
<!--
            This backends stores cache records into files (in a choosen directory).
-->
        </para>
        <table>
            <title>Доступные опции</title>
            <tgroup cols="4">
                 <thead>
                      <row>
                        <entry>Опция</entry>
                        <entry>Тип данных</entry>
                        <entry>Значение по умолчанию</entry>
                        <entry>Описание</entry>
                    </row>
                 </thead>
                 <tbody>
                      <row>
                          <entry><code>cache_dir</code></entry>
                          <entry><code>string</code></entry>
                          <entry><code>'/tmp/'</code></entry>
                          <entry>
                                        Директория, в которой хранятся файлы кэша
                              <!--Directory where to store cache files-->
                          </entry>
                      </row>
                      <row>
                          <entry><code>file_locking</code></entry>
                          <entry><code>boolean</code></entry>
                          <entry><code>true</code></entry>
                          <entry>
                                      Включает / отключает блокировку файлов. Позволяет
                            избежать искажения данных кэша в плохих условиях, но
                            это не поможет при многопоточном веб-сервере или
                            файловой системе NFS...
                            <!--Enable / disable fileLocking : Can avoid cache corruption under
                            bad circumstances but it doesn't help on multithread webservers
                            or on NFS filesystems...-->
                          </entry>
                      </row>
                      <row>
                          <entry><code>read_control</code></entry>
                          <entry><code>boolean</code></entry>
                          <entry><code>true</code></entry>
                          <entry>
                                      Включает / отключает контроль чтения. Если включен,
                            то в файл кэша добавляется контрольный ключ и этот
                            ключ сравнивается с другим, вычисляемым после
                            чтения.
                            <!--Enable / disable read control : if enabled, a control key is
                            embeded in the cache file and this key is compared with the
                            one calculated after the reading.-->
                          </entry>
                      </row>
                      <row>
                          <entry><code>read_control_type</code></entry>
                          <entry><code>string</code></entry>
                          <entry><code>'crc32'</code></entry>
                          <entry>
                                      Тип контроля чтения (только если readControl
                            включен). Возможные значения: 'md5' (лучший, но
                            самый медленный), 'crc32' (немного менее безопасный,
                            но более быстрый, лучший выбор), 'strlen' для
                            контроля толко по длине (самый быстрый).
                            <!--Type of read control (only if read control is enabled). Available values are :
                            'md5' (best but slowest), 'crc32' (lightly less safe but faster, better choice),
                            'strlen' for a length only test (fastest).-->
                        </entry>
                      </row>
                      <row>
                          <entry><code>hashed_directory_level</code></entry>
                          <entry><code>int</code></entry>
                          <entry><code>0</code></entry>
                          <entry>
                                       Уровень структуры хэшированного каталога:
                             <code>0</code> означает "нет структуры
                             хэшированного каталога",
                             <code>1</code> — "один уровень каталога",
                             <code>2</code> — "два уровня"... Эта опция ускорит
                             кэширование только если у вас тысячи файлов кэша.
                             Только сравнение может помочь вам выбрать
                             оптимальное для вас значение. Возможно,
                             <code>1</code> или <code>2</code> будут лучшими
                             значениями для начала.
                             <!--Hashed directory structure level :     0 means "no hashed directory
                             structure", 1 means "one level of directory", 2 means "two levels"...
                             This option can speed up the cache only when you have many thousands of
                             cache files. Only specific benchs can help you to choose the perfect
                             value for you. Maybe, 1 or 2 is a good start.-->
                          </entry>
                      </row>
                      <row>
                          <entry><code>hashed_directory_umask</code></entry>
                          <entry><code>int</code></entry>
                          <entry><code>0700</code></entry>
                          <entry>
                                          Маска режима создания файлов для стуктуры
                              хэшированного каталога.
                              <!--Umask for the hashed directory structure-->
                        </entry>
                      </row>
                      <row>
                          <entry><code>file_name_prefix</code></entry>
                          <entry><code>string</code></entry>
                          <entry><code>'zend_cache'</code></entry>
                          <entry>
                              Префикс для файлов кэша. Будьте осторожны с этой
                              опцией, поскольку слишком общее значение в
                              системной директории для кэша (например '/tmp')
                              может привести к катастрофичным последствиям при
                              очищении кэша.
<!--
                              prefix for cache files ; be really carefull with this option because
                              a too generic value in a system cache dir (like /tmp) can cause
                              disasters when cleaning the cache
-->
                        </entry>
                      </row>
                  </tbody>
              </tgroup>
          </table>
    </sect2>
    <sect2 id="zend.cache.backends.sqlite">
        <title>Zend_Cache_Backend_Sqlite</title>
        <para>
              Этот бэкэнд хранит записи кэша в базе данных SQLite.
<!--
            This backends stores cache records into a SQLite database.
-->
        </para>
        <table>
            <title>Доступные опции</title>
            <tgroup cols="4">
                 <thead>
                      <row>
                        <entry>Опция</entry>
                        <entry>Тип данных</entry>
                        <entry>Значение по умолчанию</entry>
                        <entry>Описание</entry>
                    </row>
                 </thead>
                 <tbody>
                      <row>
                          <entry><code>cache_db_complete_path (обязательный)</code></entry>
                          <entry><code>string</code></entry>
                          <entry><code>null</code></entry>
                          <entry>
                                         Полный путь (с именем файла) к базе данных SQLite.
                              <!--The complete path (filename included) of the SQLite database-->
                          </entry>
                      </row>
                      <row>
                          <entry><code>automatic_vacuum_factor</code></entry>
                          <entry><code>int</code></entry>
                          <entry><code>10</code></entry>
                          <entry>
                              Отклочение / настройка процесса автоматической
                              чистки. Автоматическая чистка дефрагментирует
                              файл данных (и делает его меньше) при вызове
                              методов clean() и delete():
                              0 - автоматическая чистка отключена;
                              1 - систематическая чистка (при каждом вызове
                              методов delete() или clean());
                              x (целое число больше 1) - автоматическая чистка
                              производится случайным образом 1 раз на x вызовов
                              методов clean() и delete().
<!--
                              Disable / Tune the automatic vacuum process.
                              The automatic vacuum process defragment the database file (and make it smaller)
                              when a clean() or delete() is called :
                              0 means no automatic vacuum ;
                              1 means systematic vacuum (when delete() or clean() methods are called) ;
                              x (integer) > 1 => automatic vacuum randomly 1 times on x clean() or delete().
-->
                          </entry>
                      </row>
                  </tbody>
              </tgroup>
          </table>
    </sect2>
    <sect2 id="zend.cache.backends.memcached">
        <title>Zend_Cache_Backend_Memcached</title>
        <para>
            Этот бэкэнд хранит записи кэша в серверах memcached.
            <ulink url="http://www.danga.com/memcached/">memcached</ulink> —
            высокопроизводительная распределенная система кэширования объектов
            в памяти.
<!--
            This backends stores cache records into a memcached server. <ulink url="http://www.danga.com/memcached/">memcached</ulink>
            is a high-performance, distributed memory object caching system. To use this backend,
            you need a memcached daemon and <ulink url="http://pecl.php.net/package/memcache">the memcache PECL extension</ulink>.
-->
        </para>
        <para>
            Будьте осторожны: на данный момент теги для этого бэкэнда
            не поддерживаются, как и аргумент "doNotTestCacheValidity=true".
<!--
            Be careful : with this backend, "tags" are not supported for the moment as
            the "doNotTestCacheValidity=true" argument.
-->
        </para>
        <table>
            <title>Доступные опции</title>
            <tgroup cols="4">
                 <thead>
                      <row>
                        <entry>Опция</entry>
                        <entry>Тип данных</entry>
                        <entry>Значение по умолчанию</entry>
                        <entry>Описание</entry>
                    </row>
                 </thead>
                 <tbody>
                      <row>
                          <entry><code>servers</code></entry>
                          <entry><code>array</code></entry>
                          <entry><code>array(array('host' => 'localhost','port' => 11211, 'persistent' => true))</code></entry>
                          <entry>
                              Массив серверов memcached; каждый сервер описан
                              ассоциативным массивом:
                              'host' => (string) : имя сервера memcached,
                              'port' => (int) : порт сервера memcached,
                              'persistent' => (bool) : использовать или нет
                              постоянное соединение с этим сервером
<!--
                              An array of memcached servers ; each memcached server is described by an associative array :
                              'host' => (string) : the name of the memcached server,
                              'port' => (int) : the port of the memcached server,
                              'persistent' => (bool) : use or not persistent connections to this memcached server
-->
                          </entry>
                      </row>
                      <row>
                          <entry><code>compression</code></entry>
                          <entry><code>boolean</code></entry>
                          <entry><code>false</code></entry>
                          <entry>
                             <code>true</code>, если вы хотите использовать
                             компрессию на лету
                             <!--if you want to use on-the-fly compression-->
                          </entry>
                      </row>
                  </tbody>
              </tgroup>
          </table>
    </sect2>
    <sect2 id="zend.cache.backends.apc">
        <title>Zend_Cache_Backend_APC</title>
        <para>
            Этот бэкэнд хранит записи кэша в совместно используемой памяти
            через расширение <ulink url="http://pecl.php.net/package/APC">APC</ulink>
            (Alternative PHP Cache — альтернативный кэш PHP), которое
            необходимо установить перед тем, как использовать этот бэкэнд.
<!--
            This backends stores cache records in shared memory through
            the <ulink url="http://pecl.php.net/package/APC">APC</ulink> (Alternative PHP Cache) extension
            (which is of course need for using this backend).
-->
        </para>
        <para>
            Будьте осторожны: на данный момент теги для этого бэкэнда
            не поддерживаются, как и аргумент "doNotTestCacheValidity=true".
<!--
            Be careful : with this backend, "tags" are not supported for the moment as
            the "doNotTestCacheValidity=true" argument.
-->
        </para>
        <para>
            Нет специальных опций для этого бэкэнда.
<!--
            There is no option for this backend.
-->
        </para>
    </sect2>
    <sect2 id="zend.cache.backends.platform">
        <title>Zend_Cache_Backend_ZendPlatform</title>
        <para>
            Этот бэкэнд использует API
            <ulink url="http://www.zend.com/products/platform">Zend
            Platform</ulink> для кэширования контента. Естетственно,
            использование этого бэкэнда требует наличия установленного Zend
            Platform.
<!--
            This backend uses content caching API of the <ulink url="http://www.zend.com/products/platform">Zend Platform</ulink> product. Naturally, to use this backend you need to have Zend Platform installed.
-->
        </para>
        <para>
            Этот бэкэнд поддерживает теги, но не поддерживает режим очищения
            <code>CLEANING_MODE_NOT_MATCHING_TAG</code>.
<!--
    This backend supports tags, but does not support <code>CLEANING_MODE_NOT_MATCHING_TAG</code> cleaning mode.
-->
        </para>
        <para>
            Нет специальных опций для этого бэкэнда.
<!--
            There is no options for this backend.
-->
        </para>
    </sect2></sect1>
<!--
vim:se ts=4 sw=4 et:
-->
