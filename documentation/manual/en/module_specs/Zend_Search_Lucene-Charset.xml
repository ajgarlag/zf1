<sect1 id="zend.search.lucene.charset">
    <title>Character Set</title>

    <sect2 id="zend.search.lucene.charset.description">
        <title>UTF-8 and single-byte character set support</title>

        <para>
            Zend_Search_Lucene works with the UTF-8 charset internally. Index files store
            unicode data in Java's "modified UTF-8 encoding". Zend_Search_Lucene core
            completely supports this encoding with one exception.
            <footnote>
               <para>
                   Zend_Search_Lucene supports only Basic Multilingual Plane
                   (BMP) characters (from 0x0000 to 0xFFFF) and doesn't support
                   "supplementary characters" (characters whose code points are
                   greater than 0xFFFF)
               </para>
               <para>
                   Java 2 represents these characters as a pair of char (16-bit)
                   values, the first from the high-surrogates range (0xD800-0xDBFF),
                   the second from the low-surrogates range (0xDC00-0xDFFF). Then
                   they are encoded as usual UTF-8 characters in six bytes.
                   Standard UTF-8 representation uses four bytes for supplementary
                   characters.
               </para>
            </footnote>
        </para>

        <para>
            Actual input data encoding may be specified through Zend_Search_Lucene API. Data will
            be automatically converted into UTF-8 encoding.
        </para>
    </sect2>

    <sect2 id="zend.search.lucene.charset.default_analyzer">
        <title>Default text analyzer.</title>
        <para>
            However, the default text analyzer (which is also used within query parser) uses
            ctype_alpha() for tokenizing text and queries.
        </para>

        <para>
            ctype_alpha() is not UTF-8 compatible, so the analyzer converts text to 'ASCII//TRANSLIT' encoding before
            indexing. The same processing is transparently performed during query parsing.
            .
            <footnote>
               <para>
                   Conversion to 'ASCII//TRANSLIT' may depend on current locale and OS.
               </para>
            </footnote>
        </para>
    </sect2>

    <sect2 id="zend.search.lucene.charset.utf_analyzer">
        <title>UTF-8 compatible text analyzer.</title>

        <para>
            Zend_Search_Lucene also contains a UTF-8 analyzer with limited functionality. It can be enabled with the following code:

            <programlisting role="php"><![CDATA[<?php
Zend_Search_Lucene_Analysis_Analyzer::setDefault(
    new Zend_Search_Lucene_Analysis_Analyzer_Common_Utf8());]]>
            </programlisting>
        </para>

        <para>
            It tokenizes data for indexing in UTF-8 mode and has no problems with any UTF-8 compatible characters.
        </para>

        <para>
            The two limitations of this analyzer are as follows:
            <itemizedlist>
                <listitem>
                    <para>It assumes all non-ascii characters are letters (this is not always the case).</para>
                </listitem>
                <listitem>
                    <para>It is case-sensitive.</para>
                </listitem>
            </itemizedlist>
        </para>

        <para>
            Because of these limitations it's not set as the default, but may prove helpful for some developers.
        </para>

        <para>
            Case insensitivity may be emulated with a <code>strtolower()</code> conversion:
            <programlisting role="php"><![CDATA[<?php
setlocale(LC_CTYPE, 'de_DE.iso-8859-1');

...

Zend_Search_Lucene_Analysis_Analyzer::setDefault(
    new Zend_Search_Lucene_Analysis_Analyzer_Common_Utf8());

...

$doc = new Zend_Search_Lucene_Document();

$doc->addField(Zend_Search_Lucene_Field::UnStored('contents', strtolower($contents)));

// Title field for search through (indexed, unstored)
$doc->addField(Zend_Search_Lucene_Field::UnStored('title', strtolower($title)));

// Title field for retrieving (unindexed, stored)
$doc->addField(Zend_Search_Lucene_Field::UnIndexed('_title', $title));]]>
            </programlisting>
        </para>

        <para>
            The same conversion must be performed with the query string:
            <programlisting role="php"><![CDATA[<?php
setlocale(LC_CTYPE, 'de_DE.iso-8859-1');

...

Zend_Search_Lucene_Analysis_Analyzer::setDefault(
    new Zend_Search_Lucene_Analysis_Analyzer_Common_Utf8());

...

$hits = $index->find(strtolower($query));]]>
            </programlisting>
        </para>
    </sect2>
</sect1>
