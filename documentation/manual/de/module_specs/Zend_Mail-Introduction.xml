<sect1 id="zend.mail.introduction">
    <title>Einführung</title>
    <para>
        <code>Zend_Mail</code> stellt verallgemeinerte Funktionalitäten zum Verfassen und Senden
        sowohl von Text E-Mails als auch von MIME-konformen mehrteiligen E-Mails bereit. Mails
        können mit <code>Zend_Mail</code> durch die in PHP integrierte
        <ulink url="http://php.net/mail"><code>mail()</code></ulink> Funktion oder direkt über
        eine SMTP Verbindung versandt werden.
    </para>
    <example>
        <title>Einfache E-Mail mit Zend_Mail</title>
        <para>
            Eine einfache E-Mail besteht aus einigen Empfängern, einem Betreff, einem Hauptteil und
            einem Versender. Um solch eine Mail mit Hilfe der
            <ulink url="http://php.net/mail"><code>mail()</code></ulink> PHP Funktion zu versenden,
            musst Du folgendes tun:
       </para>
            <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Mail.php';
$mail = new Zend_Mail();
$mail->setBodyText('Dies ist der Text dieser E-Mail.');
$mail->setFrom('somebody@example.com', 'Ein Versender');
$mail->addTo('somebody_else@example.com', 'Ein Empfänger');
$mail->setSubject('TestBetreff');
$mail->send();
?>]]>       </programlisting>
    </example>
    <note>
        <title>Minimale Definitionen</title>
        <para>
            Um eine E-Mail mit <code>Zend_Mail</code> zu versenden, musst du mindestens einen Empfänger,
            einen Versender (z.B., mit <code>setFrom()</code>) und einen Nachrichtentext (Text und/oder
            HTML) angeben.
        </para>
    </note>
    <para>
        Für die meisten Mailattribute gibt es "Get" Methoden, um die im Mailobjekt abgelegten
        Informationen zu lesen. Für weitere Einzelheiten wende dich an die API Dokumentation. Eine
        besondere Methode ist <code>getRecipients()</code>. Sie gibt ein Array mit allen E-Mail
        Adressen der Empfänger zurück, die vor dem Methodenaufruf hinzugefügt worden sind.
    </para>
    <para>
        Aus Sicherheitsgründen filtert <code>Zend_Mail</code> alle Felder des Nachrichtenkopfs, um
        eine "Header Injection" mittels Zeilenvorschubzeichen (<code>\n</code>) zu verhindern.
    </para>
    <para>
        You also can use most methods of the Zend_Mail object with a convenient fluent interface. A fluent
        interface means that each method returns a reference to the object on which it was called, so you can
        immediately call another method.
    </para>
        <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Mail.php';
$mail = new Zend_Mail();
$mail->setBodyText('This is the text of the mail.')
    ->setFrom('somebody@example.com', 'Some Sender')
    ->addTo('somebody_else@example.com', 'Some Recipient')
    ->setSubject('TestSubject')
    ->send();
?>]]>   </programlisting>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->