<sect1 id="zend.currency.useage">

    <title>Arbeiten mit Währungen</title>

    <para>
        Um <code>Zend_Currency</code> in einer Anwendung zu verwenden muß nur eine Instanz davon erstellt
        werden ohne das Parameter angegeben werden. Das erstellt eine Instanz von <code>Zend_Currency</code>
        mit dem aktuellen Gebietsschema, und definiert die Währung die aktuell in diesem Gebietsschema
        verwendet wird.
    </para>

    <example id="zend.currency.useage.example1">

        <title>Eine Instanz von Zend_Currency anhand des aktuellen Gebietsschemas erstellen</title>

        <para>
            Angenommen 'en_US' ist, durch die Umgebung des Benutzers, als aktuelles Gebietsschema gesetzt.
            Durch das angeben keines einzigen Parameters wärend der Erstellung der Instanz kann
            <code>Zend_Currency</code> gesagt werden das es die aktuelle Währung des Gebietsschemas 'en_US'
            verwenden soll. Das führt zu einer Instanz mit US Dollar als aktueller Währung mit den
            Formatregeln von 'en_US'.
            Expect you have 'en_US' set as actual locale through the users or your environment. By using no
            parameter while creating the instance you say <code>Zend_Currency</code> to use the actual currency
            from the locale 'en_US'. This leads to an instance with US Dollar set as actual currency with the
            formatting rules from 'en_US'.
        </para>

        <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Currency.php';

$currency = new Zend_Currency();]]>
        </programlisting>

        <note>
            <para>
                Es ist zu beachten, das wenn das eigene System kein standardmäßiges Gebietsschema hat, oder das
                Gebietsschema des eigenen Systems nicht automatisch eruiert werden kann, wird
                <code>Zend_Currency</code> eine Ausnahme werfen. Wenn dieses Verhalten auftritt sollte das
                Gebietsschema per Hand gesezt werden.
            </para>
        </note>

    </example>

    <para>
        Natürlich können, abhängig von den eigenen Bedürfnissen, verschiedene Parameter bei der Erstellung
        angegeben werden. Jeder dieser Parameter ist optional und kann unterdrückt werden. Selbst die
        Reihenfolge dieser Parameter kann gewechselt werden. Die Bedeutung dieser Parmeter wird in der
        folgenden Liste beschrieben:
    </para>

    <itemizedlist mark='opencircle'>
        <listitem>
            <para>
                <emphasis role="strong">currency</emphasis>:
            </para>
            <para>
                Ein Gebietsschema kann verschiedene Währungen beinhalten. Deshalb kann der erste Parameter
                <emphasis role="strong">'currency'</emphasis> definieren welche Währung verwendet werden soll
                indem der Kurzname dieser Währung angegeben wird. Wenn die angegebene Währung in keinem
                Gebietsschema bekannt ist, wird eine Ausnahme geworfen. Kurznamen von Währungen bestehen immer
                aus 3 Buchstaben und werden groß geschrieben. Bekannte Kurznamen von Währungen sind zum Beispiel
                <code>USD</code> oder <code>EUR</code>. Für eine Liste aller bekannten Währungen gibt es die
                Informativen Methoden von <code>Zend_Currency</code>.
            </para>
        </listitem>
        <listitem>
            <para>
                <emphasis role="strong">script</emphasis>:
            </para>
            <para>
                Der zweite Parameter <emphasis role="strong">'script'</emphasis> definiert in welcher
                Schreibweise die Ausgabe geschrieben werden soll. Die Standardschreibweise ist 'Latn' welche
                die global bekannten Ziffern von <emphasis role="strong">'0'</emphasis> bis
                <emphasis role="strong">'9'</emphasis> beinhaltet. Andere Schreibweisen wie zum Beispiel
                <emphasis role="strong">'Arab'</emphasis> können andere Ziffern beinhalten. Für weitere
                Informationen über Schreibweisen kann in
                <link linkend="zend.locale.appendix.numberscripts.supported">unterstützte Schreibweisen für Ziffern</link>
                nachgesehen werden.
            </para>
        </listitem>
        <listitem>
            <para>
                <emphasis role="strong">locale</emphasis>:
            </para>
            <para>
                Der dritte Parameter <emphasis role="strong">'locale'</emphasis> definiert welches
                Gebietsschema für die Formatierung der Währung verwendet werden soll. Das angegebene
                Gebietsschema wird auch verwendet um die Standardschreibweise und die Währung dieses
                Gebietsschemas zu erhalten wenn diese Parameter nicht angegeben werden.
            </para>
            <note>
                <para>
                    Es gilt zu Beachten das Zend_Currency nur Gebietsschema akzeptiert die eine Region
                    beinhalten. Das bedeutet das alle angegebenen Gebietsschemata die nur eine Sprache
                    beinhalten eine Ausnahme werfen. Zum Beispiel wird das Gebietsschema
                    <emphasis role="strong">en</emphasis> eine Ausnahme werfen, aber das Gebietsschema
                    <emphasis role="strong">en_US</emphasis> wird als Währung
                    <emphasis role="strong">USD</emphasis> zurückgeben.
                </para>
            </note>
        </listitem>
    </itemizedlist>

    <example id="zend.currency.useage.example2">

        <title>Andere Beispiele für die Erstellung einer Instanz von Zend_Currency</title>

        <programlisting role="php"><![CDATA[<?php
// Wir nehmen das Standardgebietsschema 'de_AT' an
require_once 'Zend/Currency.php';

// Erstellt eine Instanz von from 'en_US' und verwendet 'USD', 'Latin' und 'en_US'
// da diese die Standardwerte von 'en_US' sind
$currency = new Zend_Currency('en_US');

// Erstellt eine Instanz vom aktuellen Gebietsschema ('de_AT') und verwendet 'EUR'
// als Währung zeigt diese aber in der Schreibweise 'Arab' an
$currency = new Zend_Currency('Arab');

// Erstellt eine Instanz und verwendet 'EUR' als Währung, 'en_US' für die Formatierung der Ziffern
// und 'Arab' für die Schreibweise
$currency = new Zend_Currency('en_US', 'EUR', 'Arab');]]>
        </programlisting>

    </example>

    <para>
        Es können also alle diese Parameter unterdrückt werden wenn man die Standardwerte verwenden will.
        Das hat keine negativen Effekte bei der Handhabung von Währungen. Es kann aber nützlich sein, wenn man
        z.B. die Standardwährung einer Region nicht weiß.
    </para>

    <note>
        <para>
            Für viele Länder gibt es verschiedene bekannt Währungen. Eine Währung wird immer aktuell gerade
            verwendet und es gibt eventuell noch alte Währungen. Wenn der
            '<emphasis role="strong">currency</emphasis>' Parameter unterdrückt wird, wird immer die aktuelle
            Währung verwendet. Die Region '<emphasis role="strong">de</emphasis>' zum Beispiel kennt die
            Währungen '<emphasis role="strong">EUR</emphasis>' und
            '<emphasis role="strong">DEM</emphasis>'... '<emphasis role="strong">EUR</emphasis>' ist die
            aktuell verwendete Währung und wird verwendet wenn der Parameter unterdrückt wird.
        </para>
    </note>

    <sect2 id="zend.currency.useage.tocurrency">

        <title>Eine Ausgabe von einer Währung erstellen</title>

        <para>
            Um einen bestehenden Wert in eine formatierte Ausgabe einer Währung zu konvertieren, muß die
            Methode <emphasis role="strong">toCurrency()</emphasis> verwendet werden. Sie nimmt einen
            Wert der konvertiert werden soll. Der Wert selbst kann jede normalisierte Zahl sein.
        </para>

        <para>
            Wenn man nur eine lokalisierte Zahl hat, muß diese zuerst mit
            <link linkend="zend.locale.number.normalize">Zend_Locale_Format::getNumber()</link>
            in einen normalisierte Zahl konvertiert werden. Danach kann Sie mit <code>toCurrency()</code>
            verwendet werden um eine Ausgabe einer Währung zu erstellen.
        </para>

        <para>
            <code>toCurrency()</code> akzeptiert zwei optionale Parameter welche temporär gesetzt werden können
            um ein anderes Format zu setzen.
        </para>

        <itemizedlist mark='opencircle'>
            <listitem>
                <para>
                    <emphasis role="strong">script</emphasis>:
                </para>
                <para>
                    Der erste Parameter '<emphasis role="strong">script</emphasis>' definiert in welcher
                    Schreibweise die Ausgabe erfolgen soll. Das Standardscript ist
                    '<emphasis role="strong">Latn</emphasis>' welches die global bekannten Ziffern von
                    <emphasis role="strong">'0'</emphasis> bis <emphasis role="strong">'9'</emphasis>
                    enthält. Andere Schreibweisen wie '<emphasis role="strong">Arab</emphasis>' können andere
                    Ziffern enthalten. Für weitere Informationen über Schreibweisen kann in
                    <link linkend="zend.locale.appendix.numberscripts.supported">unterstützte Schreibweisen für Ziffern</link>
                    nachgesehen werden. Wenn der Parameter angegeben wird, wird temporär für den aktuellen
                    Aufruf der Methode die Schreibweise verwendet.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">locale</emphasis>:
                </para>
                <para>
                    Der zweite Parameter '<emphasis role="strong">locale</emphasis>' definiert welches
                    Gebietsschema für die Formatierung der Währung verwendet werden soll. Das angegebene
                    Gebietsschema wird verwendet um die Standardschreibweise und die Währung dieses
                    Gebietsschemas zu erhalten wenn diese Parameter nicht angegeben wurden. Wenn dieser
                    Parameter angegeben wird, wird das angegebene Gebietsschema temporär für diesen
                    Methodenaufruf verwendet.
                </para>
            </listitem>
        </itemizedlist>

        <example id="zend.currency.useage.tocurrency.example">

            <title>Eine Ausgabe für eine Währung erstellen</title>

            <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Currency.php';

// Erstellt eine Instanz mit 'en_US' und verwendet 'USD', 'Latin' und 'en_US'
// da das die Standardwerte von 'en_US' sind
$currency = new Zend_Currency('en_US');

// Gibt '$ 1,000.00' aus
echo $currency->toCurrency(1000);

// Gibt '$ 1.000,00' aus
echo $currency->toCurrency(1000, 'de_AT');

// Gibt '$ ١٬٠٠٠٫٠٠' aus
echo $currency->toCurrency(1000, 'Arab');]]>
            </programlisting>

        </example>
    </sect2>

    <sect2 id="zend.currency.useage.setformat">

        <title>Das Format einer Währung ändern</title>

        <para>
            Das Format das bei der Erstellung der <code>Zend_Currency</code> Instanz angegeben wurde, ist
            natürlich das Standardformat. Aber manchmal ist es nützlich dieses Format für eigene Zwecke
            anzupassen.
        </para>

        <para>
            Das Format einer Währung enthält die folgenden Teile:
        </para>

        <itemizedlist mark='opencircle'>
            <listitem>
                <para>
                    <emphasis role="strong">Symbol, Kurzname oder Name der Währung</emphasis>:
                </para>
                <para>
                    Das Symbol der Währung wird normalerweise bei der Ausgabe einer Währung angezeigt.
                    Es kann unterdrückt oder sogar überschrieben werden wenn das notwendig ist.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">Position der Währung</emphasis>:
                </para>
                <para>
                    Die Position des Währungssymbols ist normalerweise automatisch durch das
                    Gebietsschema definiert. Es kann geändert werden wenn das notwendig ist.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">Script</emphasis>:
                </para>
                <para>
                    Die Schreibweise die verwendet werden soll um Ziffern anzuzeigen. Detailierte
                    Informationen über Schreibweisen und deren verwendung kann in der Dokumentation von
                    <code>Zend_Locale</code> unter 
                    <link linkend="zend.locale.appendix.numberscripts.supported">unterstützte Schreibweisen für Ziffern</link>
                    gefunden werden.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">Zahlenformat</emphasis>:
                </para>
                <para>
                    Der Wert der Währung (üblicherweise bekannt als Geldwert) wird durch die Verwendung der
                    Formatierungsregeln des Gebietsschemas formatiert. Zum Beispiel wird im Englischen das
                    ',' Zeichen als Separator für Tausender verwendet wärend im Deutschen das '.' Zeichen
                    verwendet wird.
                </para>
            </listitem>
        </itemizedlist>

        <para>
            Wenn man also das Format ändern muß, kann die <emphasis role="strong">setFormat()</emphasis>
            Methode verwendet werden. Wenn kein Parameter angegeben wird, werden die Standardeinstellungen
            des aktuellen oder gesetzten Gebietsschematas verwendet. <code>setFormat</code> unterstützt
            die folgenden Parameter:
        </para>

        <itemizedlist mark='opencircle'>
            <listitem>
                <para>
                    <emphasis role="strong">rules</emphasis>:
                </para>
                <para>
                    Dieser Parameter wählt aus welches Währungssymbol oder welcher Name angezeigt werden soll
                    und wo. Details sind nachfolgend beschrieben.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">script</emphasis>:
                </para>
                <para>
                    Dieser Parameter wählt die Schreibweise aus die verwendet werden soll um Ziffern
                    anzuzeigen. 'Latn' ist die Standardschreibweise für die meisten Gebietsschemata.
                    Aber andere wie 'Arab' (arabisch) werden auch unterstützt.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">locale</emphasis>:
                </para>
                <para>
                    Dieser Parameter wählt das Gebietsschema aus das für die Formatierung der Zahlen
                    verwendet werden soll.
                </para>
            </listitem>
        </itemizedlist>

        <para>
            Der 'rules' Parameter akzeptiert einen String als Eingabe, oder eine der nachfolgend beschriebenen
            Konstanten die definieren wo das Währungssymbol angezeigt werden soll, und was im Detail sichtbar
            ist. Ein angegebener String überschreibt alle vorher gesetzten Währungs Kurzbezeichnungen oder
            Namen.
        </para>

        <table id="zend.currency.useage.setformat.constantsdescription">

            <title>Konstanten für die Auswahl der Beschreibung einer Währung</title>

            <tgroup cols="3" align="left">
                <thead>
                    <row>
                        <entry>Konstante</entry>
                        <entry>Wert</entry>
                        <entry>Beschreibung</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>NO_SYMBOL</entry>
                        <entry>1</entry>
                        <entry>Keine Repräsentation der Währung anzeigen</entry>
                    </row>
                    <row>
                        <entry>USE_SYMBOL</entry>
                        <entry>2</entry>
                        <entry>Das Währungssymbol als Beschreibung der Währung anzeigen</entry>
                    </row>
                    <row>
                        <entry>USE_SHORTNAME</entry>
                        <entry>3</entry>
                        <entry>Die Abkürzung der Währung (3 Buchstaben) als Beschreibung der Währung anzeigen</entry>
                    </row>
                    <row>
                        <entry>USE_NAME</entry>
                        <entry>4</entry>
                        <entry>Den Währungsnamen als Beschreibung der Währung anzeigen</entry>
                    </row>
                </tbody>
            </tgroup>

        </table>

        <table id="zend.currency.useage.setformat.constantsposition">

            <title>Konstanten für die Auswahl der Position der Währung</title>

            <tgroup cols="3" align="left">
                <thead>
                    <row>
                        <entry>Konstante</entry>
                        <entry>Wert</entry>
                        <entry>Beschreibung</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>STANDARD</entry>
                        <entry>8</entry>
                        <entry>Setzt die Position der Beschreibung auf den Standard wie im Gebietsschema definiert</entry>
                    </row>
                    <row>
                        <entry>RIGHT</entry>
                        <entry>16</entry>
                        <entry>Die Beschreibung der Währung an der rechten Seite vom Wert anzeigen</entry>
                    </row>
                    <row>
                        <entry>LEFT</entry>
                        <entry>32</entry>
                        <entry>Die Beschreibung der Währung an der linken Seite vom Wert anzeigen</entry>
                    </row>
                </tbody>
            </tgroup>

        </table>

        <example id="zend.currency.useage.setformat.example">

            <title>Das Anzeigeformat der Währung ändern</title>

            <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Currency.php';

// Erstellt eine Instanz mit 'en_US' und verwendet 'USD', 'Latin' und 'en_US'
// da das die Standardwerte von 'en_US' sind
$currency = new Zend_Currency('en_US');

// Gibt 'US$ 1,000.00' aus
echo $currency->toCurrency(1000);

$currency->setFormat(Zend_Currency::USE_NAME&Zend_Currency::RIGHT);
// Gibt '1.000,00 US Dollar' aus
echo $currency->toCurrency(1000);

$currency->setFormat("Amerikanische Dollar");
// Gibt '1.000,00 Amerikanische Dollar' aus
echo $currency->toCurrency(1000);]]>
            </programlisting>

        </example>
    </sect2>

    <sect2 id="zend.currency.useage.informational">

        <title>Informative Methoden von Zend_Currency</title>

        <para>
            Natürlich bietet <code>Zend_Currency</code> auch Methoden an um Informationen über jede existierende
            und viele historische Währungen von <code>Zend_Locale</code> zu bekommen. Die unterstützten
            Methoden sind:
        </para>

        <itemizedlist mark='opencircle'>
            <listitem>
                <para>
                    <emphasis role="strong">getSymbol()</emphasis>:
                </para>
                <para>
                    Gibt das bekannte Symbol der aktuellen oder einer angegebenen Währung zurück.
                    Zum Beispiel <emphasis role="strong">$</emphasis> für den US Dollar innerhalb des
                    Gebietsschemas '<emphasis role="strong">en_US</emphasis>'.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">getShortName()</emphasis>:
                </para>
                <para>
                    Gibt die Abkürzung der aktuellen oder einer angegebenen Währung zurück. Zum Beispiel
                    <emphasis role="strong">USD</emphasis> für den US Dollar innerhalb des
                    Gebietsschemas '<emphasis role="strong">en_US</emphasis>'.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">getName()</emphasis>:
                </para>
                <para>
                    Gibt den kompletten Namen der aktuellen oder einer angegebenen Währung zurück. Zum Beispiel
                    <emphasis role="strong">US Dollar</emphasis> für den US Dollar innerhalb des
                    Gebietsschemas '<emphasis role="strong">en_US</emphasis>'.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">getRegionList()</emphasis>:
                </para>
                <para>
                    Gibt eine Liste von Regionen zurück in denen die aktuelle oder eine angegebene
                    Währung verwendet wird. Es ist möglich das eine Währung in mehreren Regionen Verwendung
                    findet, deswegen ist der Rückgabewert immer ein Array.
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">getCurrencyList()</emphasis>:
                </para>
                <para>
                    Gibt eine Liste von Währungen zurück die in einer angegebenen Region verwendet werden.
                </para>
            </listitem>
        </itemizedlist>

        <para>
            Die Funktion <code>getSymbol()</code>, <code>getShortName()</code> und <code>getName()</code>
            akzeptieren zwei optionale Parameter. Wenn kein Parameter angegeben wird, werden die Daten von
            der aktuell gesetzten Währung zurückgegeben. Der erste Parameter akzeptiert den Kurznamen der
            Währung. Kurznamen bestehen immer aus drei Buchstaben, zum Beispiel EUR für Euro oder USD für
            US Dollar. Der zweite Parameter definiert von welchem Gebietsschema die Daten gelesen werden sollen.
            Wenn kein Gebietsschema angegeben wird, wird das aktuelle Gebietsschema verwendet. 
        </para>

        <example id="zend.currency.useage.informational.example">

            <title>Informationen von Währungen erhalten</title>

            <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Currency.php';

// Erstellt eine Instanz mit 'en_US' und verwendet 'USD', 'Latin' und 'en_US'
// da das die Standardwerte von 'en_US' sind
$currency = new Zend_Currency('en_US');

// Gibt '$' aus
echo $currency->getSymbol();

// Gibt 'EUR' aus
echo $currency->getShortName('EUR');

// Gibt 'Österreichische Schilling' aus
echo $currency->getName('ATS', 'de_AT');

// Gibt ein Array aus mit allen Regionen in denen USD verwendet wird
print_r($currency->getRegionList();

// Gibt ein Array aus mit allen Währungen die jemals in dieser Region verwendet wurden 
print_r($currency->getCurrencyList('de_AT');]]>
            </programlisting>

        </example>

    </sect2>

    <sect2 id="zend.currency.useage.cache">

        <title>Zend_Currency schneller machen</title>

        <para>
            <code>Zend_Currency</code> kann schneller gemacht werden indem <code>Zend_Cache</code> verwendet
            wird. Durch die Verwendung der statischen Methode <code>Zend_Currency::setCache($cache)</code>
            welche eine Option akzeptiert, nämlich einen <code>Zend_Cache</code> Adapter. Wenn dieser
            gesetzt wird, werden die Lokalisierungsdaten der Methoden von Zend_Currency gecached.
        </para>

    </sect2>

</sect1>