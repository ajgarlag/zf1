<sect1 id="zend.gdata.youtube">
    <title>Verwenden der YouTube Daten API</title>
    
    <para>
        Die YouTube Daten API bietet einen nur-lesenden Zugang zu YouTube Inhalten in der Form von Google
        Daten ("GData") Feeds. Die API gibt Zugriff zu Listen von Videos die speziellen Kriterien entsprechen,
        populären Videos, und mehr. Sie erlaubt auch den Zugriff zu öffentlichen Informationen über YouTube
        Benutzer, inklusive PlayListen, Einschreibungen und Kontakten.
    </para>
    
    <para>
        Für weitere Informationen über die YouTube daten API, muß in die
        <ulink url="http://code.google.com/apis/youtube/">Dokumentation der YouTube Daten API</ulink>
        referenziert werden.
    </para>
    
    <note>
        <title>Authentifizierung</title>
        <para>
            Die YouTube Daten API erlaubt aktuell einen nur-lesenden Zugriff auf öffentliche Daten, sodas keine
            Authentifizierung benötigt wird.
            </para>
    </note>
    
    <sect2 id="zend.gdata.youtube.videos">
        <title>Video Feeds empfangen</title>
        
        <para>
            Die YouTube Daten API bietet eine Vielzahl von Feeds die eine Liste von Videos zurückgeben, wie zum
            Beispiel Standard Feeds, Abhängige Videos, Antworten auf Videos, Videobewertungen, Benutzer Uploads,
            und Benutzer Favoriten. Zum Beispiel gibt der Benutzer-Upload Feed alle Videos zurück die von einem
            speziellen Benutzer hochgeladen wurden. Siehe auch den
            <ulink url="http://code.google.com/apis/youtube/reference.html#Feeds">Referenz Guide</ulink> für
            eine detailierte Liste aller Feeds. Alle die Feeds die in dieser Sektion beschrieben werden sind
            "Video Feeds" -- Feeds die Listen von Videos zurückgeben.
        </para>
        
        <sect3 id="zend.gdata.youtube.videos.searching">
            <title>Suchen nach Videos durch Metadaten</title>
            
            <para>
                Man kann eine Liste von Videos erhalten die einem speziellen Suchkriterium entsprechen, indem
                der Video Feed verwendet wird. Die folgende Abfrage schaut nach Videos welche das Wort "Katze"
                in Ihren Metadaten enthalten, beginnend mit dem 10ten Video und 20 Videos pro Seite anzeigt,
                sortiert nach der Anzahl der Ansichten.
            </para>
            
            <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Loader.php';
Zend_Loader::loadClass('Zend_Gdata_YouTube');

$yt = new Zend_Gdata_YouTube();
$query = $yt->newVideoQuery();
$query->videoQuery = 'cat';
$query->startIndex = 10;
$query->maxResults = 20;
$query->orderBy = 'viewCount';

echo $query->queryUrl . "\n";
$videoFeed = $yt->getVideoFeed($query); 

foreach ($videoFeed as $videoEntry) {
  echo "---------VIDEO----------\n";
  echo "Titel: " . $videoEntry->mediaGroup->title->text . "\n";
  echo "\nBeschreibung:\n";
  echo $videoEntry->mediaGroup->description->text;
  echo "\n\n\n";
}
?>]]></programlisting>
    
            <para>
                Für weitere Details über die verschiedenen Abfrageparameter, kann der
                <ulink url="http://code.google.com/apis/youtube/reference.html#Parameters">Referenz Guide</ulink>
                hilfreich sein. Für jeden dieser Parameter gibt es Hilfsfunktionen in
                Zend_Gdata_YouTube_VideoQuery.
            </para> 
        </sect3>

        <sect3 id="zend.gdata.youtube.videos.searchingcategories">
            <title>Suchen nach Videos durch Kategorien und Tags/Schlüsselwörter</title>
    
            <para>
                Die Suche nach Videos in speziellen Kategorien wird durch die Erstellung einer
                <ulink url="http://code.google.com/apis/youtube/reference.html#CategorySearch">
                speziell formatierten URL</ulink> durchgeführt. Um, zum Beispiel, nach Komödien-Videos zu
                suchen die das Schlüsselwort Hund enthalten:
            </para>
    
            <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$query = $yt->newVideoQuery();
$query->category = 'Comedy/Hund';

echo $query->queryUrl . "\n";
$videoFeed = $yt->getVideoFeed($query); 
]]></programlisting>
        </sect3>
 
        <sect3 id="zend.gdata.youtube.videos.standard">
            <title>Standard Feeds empfangen</title>
            
            <para>
                Die YouTube Daten API hat eine Anzahl an
                <ulink url="http://code.google.com/apis/youtube/reference.html#VideoFeeds">Standard Feeds</ulink>.
                Diese Standard Feeds können durch Zend_Gdata_YouTube_VideoFeed Objekte empfangen werden indem
                spezielle URLs verwendet werden, aber viele haben auch Helfermethoden in Zend_Gdata_YouTube.
            </para>

            <para>
                Um die Top gereihten Videos zu erhalten kann die folgende Helfermethode verwendet werden:
            </para>

            <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();

$videoFeed = $yt->getTopRatedVideoFeed(); 
]]></programlisting>

            <para>
                Es gibt auch Abfrageparameter um eine Zeitperiode zu spezifizieren über die der Standardfeed
                berechnet wird. Nur gültig mit den top_raten und most_viewed Standardfeed.
            </para>

            <para>
                Um zum Beispiel die Top gereihten Videos von Heute zu erhalten:
            </para> 

            <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$query = $yt->newVideoQuery();
$query->setTime('today');
$videoFeed = $yt->getTopRatedVideoFeed($query); 
]]></programlisting> 
            <para>
                Alternativ kann man den Feed erhalten indem die URL verwendet wird:
            </para>

            <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$query = $yt->newVideoQuery('http://gdata.youtube.com/feeds/standardfeeds/top_rated');
$query->setTime('today');
$videoFeed = $yt->getVideoFeed($query); 
]]></programlisting>
        </sect3>

        <sect3 id="zend.gdata.youtube.videos.user">
            <title>Videos erhalten die von einem Benutzer hochgeladen wurden</title>

            <para>
                Man kann eine Liste von Videos erhalten die von einem bestimmten Benutzer hochgeladen wurden
                indem eine einfache Helfermethode verwendet wird. Dieses Beispiel empfängt Videos die vom
                Benutzer 'liz' hochgeladen wurden. 
            </para>

            <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$videoFeed = $yt->getUserUploads('liz'); 
]]></programlisting>
        </sect3>

        <sect3 id="zend.gdata.youtube.videos.favorites">
            <title>Videos empfangen die von einem Benutzer bevorzugt werden</title>

            <para>
                Man kann eine Liste von bevorzugten Videos eines Benutzer erhalten indem eine einfache
                Helfermethode verwendet wird. Dieses Beispiel empfängt Videos die vom Benutzer 'liz'
                bevorzugt werden.
            </para>

            <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$videoFeed = $yt->getUserFavorites('liz'); 
]]></programlisting>
        </sect3>

        <sect3 id="zend.gdata.youtube.videos.responses">
            <title>Videobewertungen für ein Video erhalten</title>

            <para>
                Man kann eine Liste von Videobewertungen eines Videos erhalten indem eine einfache
                Helfermethode verwendet wird. Dieses Beispiel empfängt Videobewertungen für ein Video
                mit der ID 'abc123813abc'.
            </para>

            <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$videoFeed = $yt->getVideoResponseFeed('abc123813abc'); 
]]></programlisting>
        </sect3>
    </sect2>

    <sect2 id="zend.gdata.youtube.comments">
        <title>Videokommentare erhalten</title>

        <para>
            Die Kommentare für jedes YouTube Video können auf unterschiedlichen Wegen empfangen werden.
            Um die Kommentare für das Video mit der ID 'abc123813abc' zu empfangen kann der folgende Code
            verwendet werden:
        </para>

        <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$commentFeed = $yt->getVideoCommentFeed('abc123813abc'); 

foreach ($commentFeed as $commentEntry) {
    echo $commentEntry->title->text . "\n";
    echo $commentEntry->content->text . "\n\n\n";
} 
]]></programlisting>

        <para>
            Kommentare können für ein Video auch empfangen werden wenn man eine Kopie des
            Zend_Gdata_YouTube_VideoEntry Objektes hat:
        </para>

            <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$videoEntry = $yt->getVideoEntry('abc123813abc'); 
// Die ID des Videos in diesem Beispiel ist nicht bekannt, aber wir haben die URL
$commentFeed = $yt->getVideoCommentFeed(null, $videoEntry->comments->href);
]]></programlisting>
        
    </sect2>

    <sect2 id="zend.gdata.youtube.playlists">
        <title>PlayList Feeds erhalten</title>

        <para>
            Die YouTube Daten API bietet Informationen über Benutzer, inklusive Profile, PlayListen,
            Einschreibungen, und weitere.
        </para>
    
        <sect3 id="zend.gdata.youtube.playlists.user">
            <title>Die PlayListen eines Benutzer erhalten</title>
        
            <para>
                Die Bibliothek bietet eine Helfermethode um die PlayListen, die einem angegebenen Benutzer
                zugeordnet sind, zu erhalten. Um die PlayListen des Benutzers 'liz' zu erhalten kann der folgende
                Code verwendet werden:
            </para>
            <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$playlistListFeed = $yt->getPlaylistListFeed('liz'); 

foreach ($playlistListFeed as $playlistEntry) {
    echo $playlistEntry->title->text . "\n";
    echo $playlistEntry->description->text . "\n";
    echo $playlistEntry->getPlaylistVideoFeedUrl() . "\n\n\n";
}
]]></programlisting>
        </sect3>

        <sect3 id="zend.gdata.youtube.playlists.user">
            <title>Eine spezielle PlayListe erhalten</title>

            <para>
                Die Bibliothek bietet eine Helfermethode um Videos zu erhalten die mit einer gegebenen
                PlayListe assoziiert sind. Um die PlayListe für einen speziellen PlayList Eintrag zu erhalten
                kann der folgende Code verwendet werden:
            </para>
            <programlisting role="php"><![CDATA[
$playlistVideoFeed = $yt->getPlaylistVideoFeed($playlistEntry->getPlaylistVideoFeedUrl()); 
]]></programlisting>
        </sect3>
    </sect2> 

    <sect2 id="zend.gdata.youtube.subscriptions">
        <title>Eine Liste von Einschreibungen eines Benutzers erhalten</title>

        <para>
            Ein Benutzer kann verschiedene Arten von Einschreibungen besitzen: Kanal Einschreibungen, Tag
            Einschreibungen, oder Favoriten Einschreibungen. Ein Zend_Gdata_YouTube_SubscriptionEntry
            wird verwendet um individuelle Einschreibungen zu repräsentieren.
        </para>

        <para>
            Um alle Einschreibungen für den Benutzer 'liz' zu erhalten kann der folgende Code verwendet werden:
        </para>
        <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$subscriptionFeed = $yt->getSubscriptionFeed('liz'); 

foreach ($subscriptionFeed as $subscriptionEntry) {
    echo $subscriptionEntry->title->text . "\n";
}
]]></programlisting>
    </sect2>

    <sect2 id="zend.gdata.youtube.profile">
        <title>Ein Benutzerprofil erhalten</title>

        <para>
            Die öffentlichen Profil Informationen kann man für jeden YouTube Benutzer erhalten. Um das Profil
            für den Benutzer 'liz' zu erhalten kann der folgende Code verwendet werden: 
        </para>

        <programlisting role="php"><![CDATA[
$yt = new Zend_Gdata_YouTube();
$userProfile = $yt->getUserProfile('liz'); 
echo "Benutzername: " . $userProfile->username->text . "\n";
echo "Alter: " . $userProfile->age->text . "\n";
echo "Heimatstadt: " . $userProfile->hometown->text . "\n"; 
]]></programlisting>
    </sect2>

</sect1>
