<sect1 id="zend.translate.adapter">

    <title>Zend_Translate のアダプタ</title>

    <para>
        Zend_Translate は、さまざまなアダプタを使用して翻訳を行えます。
        それぞれのアダプタによって利点や欠点があります。
        以下に、翻訳の入力ファイルとしてサポートしているすべてのアダプタについてまとめます。
    </para>

    <table id="zend.translate.adapter.table">
        <title>Zend_Translate のアダプタ</title>
        <tgroup cols="3">
            <thead>
                <row>
                    <entry>アダプタ</entry>
                    <entry>説明</entry>
                    <entry>備考</entry>
                </row>
            </thead>
            <tbody>
                <row>
                    <entry>Array</entry>
                    <entry>php の配列</entry>
                    <entry>小さめのページ。簡単に使用できる。プログラマしかさわれない。</entry>
                </row>
                <row>
                    <entry>Csv</entry>
                    <entry>カンマ区切りファイル (*.csv/*.txt)</entry>
                    <entry>シンプルなテキスト形式。非常に高速。Unicode 文字で問題が発生する可能性がある。</entry>
                </row>
                <row>
                    <entry>Gettext</entry>
                    <entry>gettext のバイナリファイル (*.mo)</entry>
                    <entry>linux における GNU の標準形式。非常に高速。スレッドセーフ。翻訳用ツールが必要。</entry>
                </row>
                <row>
                    <entry>Tbx</entry>
                    <entry>termbase 変換ファイル (*.tbx/*.xml)</entry>
                    <entry>アプリケーション間で専門用語を変換するための業界標準。XML フォーマット。</entry>
                </row>
                <row>
                    <entry>Tmx</entry>
                    <entry>tmx ファイル (*.tmx/*.xml)</entry>
                    <entry>アプリケーション間での翻訳の業界標準。XML フォーマット。可読形式。</entry>
                </row>
                <row>
                    <entry>Qt</entry>
                    <entry>qt 言語ファイル (*.ts)</entry>
                    <entry>クロスプラットフォームなアプリケーションフレームワーク。XML フォーマット。可読形式。</entry>
                </row>
                <row>
                    <entry>Xliff</entry>
                    <entry>xliff ファイル (*.xliff/*.xml)</entry>
                    <entry>TMX に似ているが、よりシンプル。XML フォーマット。可読形式。</entry>
                </row>
                <row>
                    <entry>XmlTm</entry>
                    <entry>xmltm ファイル (*.xml)</entry>
                    <entry>XML ドキュメントの翻訳メモリの業界標準。XML フォーマット。可読形式。</entry>
                </row>
                <row>
                    <entry>その他</entry>
                    <entry>*.sql</entry>
                    <entry>今後、その他さまざまなアダプタを実装する予定です。</entry>
                </row>
            </tbody>
        </tgroup>
    </table>

    <sect2 id="zend.translate.adapter.decision">

        <title>使用するアダプタを決める方法</title>

        <para>
            Zend_Translate でどのアダプタを使用するのかを決める必要があります。
            プロジェクトの制約や顧客からの要望などの外的要因でアダプタが決まることもよくありますが、
            もしあなたに決定権があるのなら、以下のヒントを参考にしてください。
        </para>

        <sect3 id="zend.translate.adapter.array">

            <title>Zend_Translate_Adapter_Array</title>

            <para>
                Array アダプタは、プログラマにとっては
                一番シンプルに使えるアダプタです。
                しかし、翻訳する文字列が大量にある場合や
                多くの言語に翻訳する必要がある場合は、別のアダプタを使うようにしましょう。
                たとえば、翻訳文字列が 5000 ほどある場合は
                Array アダプタは選択しないほうがいいでしょう。
            </para>

            <para>
                このアダプタを使うのは、小さめのサイトで少なめの言語を扱い、
                かつプログラマ自身で翻訳も行う場合だけにしましょう。
            </para>
        </sect3>

        <sect3 id="zend.translate.adapter.csv">

            <title>Zend_Translate_Adapter_Csv</title>

            <para>
                Csv アダプタは、顧客にとっては最もシンプルに使えるアダプタです。
                CSV ファイルは標準的なテキストエディタで読むことができますが、
                エディタによっては utf8 文字セットをサポートしていないものもあります。
            </para>

            <para>
                このアダプタを使うのは、
                顧客が自分で翻訳を行いたいという場合だけにしましょう。
            </para>
        </sect3>

        <sect3 id="zend.translate.adapter.gettext">

            <title>Zend_Translate_Adapter_Gettext</title>

            <para>
                Gettext アダプタは、最もよく用いられるアダプタです。
                Gettext は GNU が提供している翻訳フォーマットで、世界中で使用されています。
                可読形式ではありませんが、便利なフリーウェア
                (<ulink url="http://sourceforge.net/projects/poedit/">POEdit</ulink> など)
                が公開されています。
                Zend_Translate の Gettext アダプタは、PHP の gettext
                拡張モジュールを使わずに実装しています。
                PHP の gettext 拡張モジュールをインストールしていなくても
                Gettext アダプタを使用することが可能です。
                また、このアダプタはスレッドセーフですが、PHP の gettext
                拡張モジュールは現状ではスレッドセーフでありません。
            </para>

            <para>
                ほとんどの人たちは、このアダプタを使うことになるでしょう。
                便利なツールを使用することで、高品質な翻訳が簡単に作成できます。
                しかし、gettext のデータは機械が読める形式で保存されるので、
                何らかのツールがないと人間が読むことはできません。
            </para>
        </sect3>

        <sect3 id="zend.translate.adapter.tbx">

            <title>Zend_Translate_Adapter_Tbx</title>

            <para>
                Tbx アダプタは、内部ですでに TBX フォーマットの翻訳システムを使用している顧客などが使用します。
                Tbx は標準の翻訳フォーマットではありませんが、
                すでに多くの翻訳や翻訳済み文字列が存在します。
                このアダプタを使用する場合は、
                必要な文字列をすべて翻訳しなければならないことに気をつけましょう。
                TBX は、まったく新しく作られた XML ベースのフォーマットです。
                XML ファイルは人間が読むことも可能ですが、
                パース速度は gettext ファイルより遅くなります。
            </para>

            <para>
                このアダプタは、すでにこの形式の翻訳ファイルを持っている企業に最適です。
                ファイルは可読形式で、システムに依存しない形式になります。
            </para>
        </sect3>

        <sect3 id="zend.translate.adapter.tmx">

            <title>Zend_Translate_Adapter_Tmx</title>

            <para>
                Tmx アダプタは、複数のシステムで同一の翻訳ソースを使用している顧客などが使用します。
                また、翻訳ソースをシステムに依存しない形式にしたい場合にも使用します。
                TMX は XML 形式のフォーマットで、業界標準になるといわれています。
                XML ファイルは人間が読むことも可能ですが、
                パース速度は gettext ファイルより遅くなります。
            </para>

            <para>
                中規模から大規模の会社はこのアダプタを使用します。
                ファイルは可読形式で、システムに依存しない形式になります。
            </para>
        </sect3>

        <sect3 id="zend.translate.adapter.qt">

            <title>Zend_Translate_Adapter_Qt</title>

            <para>
                Qt アダプタは、QtLinguist で作成した TS
                ファイル形式の翻訳を使用している顧客が使用します。
                QT は XML 形式のフォーマットです。
                XML ファイルは人間が読むことも可能ですが、
                パース速度は gettext ファイルより遅くなります。
            </para>

            <para>
                大手企業の中には QT フレームワークを使用したソフトウェアを作成しているところがあります。
                ファイルは可読形式で、システムに依存しない形式になります。
            </para>
        </sect3>

        <sect3 id="zend.translate.adapter.xliff">

            <title>Zend_Translate_Adapter_Xliff</title>

            <para>
                Xliff アダプタは、XML ファイルを使用したいけれど
                TMX 用のツールを持っていないという顧客などが使用します。
                XLIFF は XML 形式のフォーマットで、
                TMX と関連していますがもうすこしシンプルです。機能も一部限定されています。
                XML ファイルは人間が読むことも可能ですが、
                パース速度は gettext ファイルより遅くなります。
            </para>

            <para>
                中規模の会社はこのアダプタを使用します。
                ファイルは可読形式で、システムに依存しない形式になります。
            </para>
        </sect3>

        <sect3 id="zend.translate.adapter.xmltm">

            <title>Zend_Translate_Adapter_XmlTm</title>

            <para>
                XmlTm アダプタは、すでにこのレイアウトを採用している顧客が使用するアダプタです。
                XmlTm は、html ソース全体を翻訳ソースに含めることのできるフォーマットで、
                翻訳とレイアウトがひとつにまとまります。
                XLIFF は XML ベースのフォーマットです。XLIFF
                と関連していますが、それほど読みやすくはありません。
            </para>

            <para>
　　　　　　　　このアダプタは、すでにソースファイルが存在する場合にのみ使用するようにしましょう。
                ファイルは可読形式で、システムに依存しない形式になります。
            </para>
        </sect3>

    </sect2>

    <sect2 id="zend.translate.adapter.selfwritten">

        <title>自作のアダプタの組み込み</title>

        <para>
            Zend_Translate に、自作のアダプタクラスを組み込むこともできます。
            これは、Zend_Translate に組み込まれている標準のアダプタクラスと同様に使うことができます。
        </para>

        <para>
            Zend_Translate で使用するアダプタクラスは、
            Zend_Translate_Adapter のサブクラスでなければなりません。
            Zend_Translate_Adapter は抽象クラスであり、翻訳に必要なものをすべて定義しています。
            あなたがすべきことは、翻訳データの読み込み方法を定義することだけです。
        </para>

        <para>
            名前の先頭に "Zend" をつけることができるのは Zend_Framework
            内のパッケージだけです。Zend_Translate で使うためのアダプタを自作する場合は、
            その名前はたとえば "Company_Translate_Adapter_MyFormat" のようにする必要があります。
            次のコードは、独自のアダプタクラスを実装する例を示すものです。
        </para>

        <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Translate.php';

try {
    $translate = new Zend_Translate('Company_Translate_Adapter_MyFormat', '/path/to/translate.xx', 'en', array('myoption' => 'myvalue'));
} catch (Exception $e) {
    // ファイルが見つからない、アダプタクラスが存在しない、……
    // などの一般的なエラー
}]]>
        </programlisting>

    </sect2>

</sect1>
<!--
vim:se ts=4 sw=4 et:
-->
