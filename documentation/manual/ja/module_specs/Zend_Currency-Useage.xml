<sect1 id="zend.currency.useage">

    <title>通貨の操作方法</title>

    <para>
        <code>Zend_Currency</code> をアプリケーションで使用するには、
        何もパラメータを指定せずに単にそのインスタンスを作成します。
        これで、実際のロケールにもとづいた <code>Zend_Currency</code>
        のインスタンスができあがります。このインスタンスには、
        そのロケールで使用する通貨が定義されています。
    </para>

    <example id="zend.currency.useage.example1">

        <title>実際のロケールからの Zend_Currency のインスタンスの作成</title>

        <para>
            この例では、あなたの環境のロケールが 'en_US' であるものと仮定します。
            何もパラメータを指定せずに <code>Zend_Currency</code> のインスタンスを作成すると、
            実際の環境のロケールである 'en_US' を使用することになります。
            その結果として通貨単位は米ドルとなり、数値フォーマット規則は
            'en_US' となります。
        </para>

        <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Currency.php';

$currency = new Zend_Currency();]]>
        </programlisting>

        <note>
            <para>
                システムでデフォルトのロケールが設定されていないかったり
                システムのロケールの検出に失敗したりした場合は、
                <code>Zend_Currency</code> は例外をスローします。
                このような場合は、ロケールを明示的に指定する必要があります。
            </para>
        </note>

    </example>

    <para>
        もちろん、必要に応じてパラメータを指定してインスタンスを作成することもできます。
        各パラメータはオプションであり、省略可能です。
        またパラメータを指定する順番も変更することができます。
        パラメータの意味について、次にまとめます。
    </para>

    <itemizedlist mark='opencircle'>
        <listitem>
            <para>
                <emphasis role="strong">currency</emphasis>:
            </para>
            <para>
                ひとつのロケールには複数の通貨を含めることができます。
                最初のパラメータ <emphasis role="strong">'currency'</emphasis>
                では、どの通貨を使用するのかを定義します。
                定義する際には、その通貨の短い名前を使用します。
                未知の通貨を指定した場合は例外をスローします。
                通貨の短い名前は、アルファベット大文字で 3 文字となります。
                たとえば <code>USD</code> (米ドル) や <code>EUR</code> (ユーロ)
                などがよく知られています。
                既知の通貨の一覧を得るメソッドが <code>Zend_Currency</code>
                に用意されています。
            </para>
        </listitem>
        <listitem>
            <para>
                <emphasis role="strong">script</emphasis>:
            </para>
            <para>
                2 番目のパラメータ <emphasis role="strong">'script'</emphasis>
                は、出力に使用する数字の種類を定義します。標準の数字は 'Latn'
                で、これは世界的によく知られている
                <emphasis role="strong">'0'</emphasis> から <emphasis role="strong">'9'</emphasis>
                までの文字を使用するものです。それ以外にも、たとえば
                <emphasis role="strong">'Arab'</emphasis> (アラビア数字)
                のような他の数字も指定できます。数字についての詳細な情報は
                <link linkend="zend.locale.appendix.numberscripts.supported">サポートする数値系</link>
                を参照ください。
            </para>
        </listitem>
        <listitem>
            <para>
                <emphasis role="strong">locale</emphasis>:
            </para>
            <para>
                3 番目のパラメータ <emphasis role="strong">'locale'</emphasis>
                は、通貨のフォーマットの際に使用するロケールを定義します。
                script や currency が省略された場合は、
                このパラメータの内容をもとに標準の数字と通貨を取得します。
            </para>
            <note>
                <para>
                    Zend_Currency で使用できるロケールは、地域情報を含むものだけであることに注意しましょう。
                    言語情報のみのロケールを指定すると、例外が発生します。たとえば
                    <emphasis role="strong">en</emphasis> を指定するとエラーとなります。一方
                    <emphasis role="strong">en_US</emphasis> を指定すると、
                    通貨は <emphasis role="strong">USD</emphasis> となります。
                </para>
            </note>
        </listitem>
    </itemizedlist>

    <example id="zend.currency.useage.example2">

        <title>Zend_Currency のインスタンスを作成する別の例</title>

        <programlisting role="php"><![CDATA[<?php
// 標準のロケールが 'de_AT' であるものとします
require_once 'Zend/Currency.php';

// 'en_US' でインスタンスを作成します。これは 'USD'、'Latin' そして 'en_US' を使用します (これらは 'en_US' のデフォルトです)
$currency = new Zend_Currency('en_US');

// 実際のロケール ('de_AT') で通貨として 'EUR' を使用するが、表示する数字は 'Arab' となるインスタンスを作成します
$currency = new Zend_Currency('Arab');

// 通貨として 'EUR'、数値フォーマットに 'en_US'、数字に 'Arab' を使用するインスタンスを作成します
$currency = new Zend_Currency('en_US', 'EUR', 'Arab');]]>
        </programlisting>

    </example>

    <para>
        デフォルトの値を使用する場合は、これらのパラメータはどれでも省略することができます。
        通貨を処理する際に、それによる悪影響は一切ありません。
        これは、たとえばその地域で実際に使われている通貨を知らない場合などに便利です。
    </para>

    <note>
        <para>
            複数の通貨を使用している国もあります。
            たとえば、現在流通しているもの以外に
            以前に使用していた通貨がある場合などです。
            '<emphasis role="strong">currency</emphasis>' パラメータを省略した場合は、
            現在流通している通貨を使用します。たとえば
            '<emphasis role="strong">de</emphasis>' (ドイツ) の通貨には
            '<emphasis role="strong">EUR</emphasis>' (ユーロ) と
            '<emphasis role="strong">DEM</emphasis>' (独マルク) がありますが、
            現在流通しているのは
            '<emphasis role="strong">EUR</emphasis>' です。
            パラメータを省略した場合はこちらを使用します。
        </para>
    </note>

    <sect2 id="zend.currency.useage.tocurrency">

        <title>通貨形式での出力の作成</title>

        <para>
            既存の値を通貨形式にフォーマットして出力するには
            <emphasis role="strong">toCurrency()</emphasis> メソッドを使用します。
            変換したい値をこのメソッドに渡します。
            この値には、正規化された数値ならなんでも指定できます。
        </para>

        <para>
            地域化された数字がある場合は、まずそれを
            <link linkend="zend.locale.number.normalize">Zend_Locale_Format::getNumber()</link>
            で正規化します。それから、その結果を
            <code>toCurrency()</code> に渡して通貨形式の出力を作成します。
        </para>

        <para>
            <code>toCurrency()</code> にはオプションで 2 つのパラメータを指定することができます。
            このパラメータでは、一時的にフォーマットを設定します。
        </para>

        <itemizedlist mark='opencircle'>
            <listitem>
                <para>
                    <emphasis role="strong">script</emphasis>:
                </para>
                <para>
                    最初のパラメータ '<emphasis role="strong">script</emphasis>'
                    は、出力に使用する数字の種類を定義します。標準の数字は '<emphasis role="strong">Latn</emphasis>'
                    で、これは世界的によく知られている
                    <emphasis role="strong">'0'</emphasis> から <emphasis role="strong">'9'</emphasis>
                    までの文字を使用するものです。それ以外にも、たとえば
                    '<emphasis role="strong">'Arab'</emphasis>' (アラビア数字)
                    のような他の数字も指定できます。数字についての詳細な情報は
                    <link linkend="zend.locale.appendix.numberscripts.supported">サポートする数値系</link>
                    を参照ください。これを指定すると、
                    このメソッドのコール時にだけ一時的にその数字を使用します。
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">locale</emphasis>:
                </para>
                <para>
                    2 番目のパラメータ '<emphasis role="strong">'locale'</emphasis>'
                    は、通貨のフォーマットの際に使用するロケールを定義します。
                    script や currency が省略された場合は、
                    このパラメータの内容をもとに標準の数字と通貨を取得します。
                    これを指定すると、
                    このメソッドのコール時にだけ一時的にそのロケールを使用します。
                </para>
            </listitem>
        </itemizedlist>

        <example id="zend.currency.useage.tocurrency.example">

            <title>通貨形式での出力の作成</title>

            <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Currency.php';

// 'en_US' でインスタンスを作成します。これは 'USD'、'Latin' そして 'en_US' を使用します (これらは 'en_US' のデフォルトです)
$currency = new Zend_Currency('en_US');

// '$ 1,000.00' と表示します
echo $currency->toCurrency(1000);

// '$ 1.000,00' と表示します
echo $currency->toCurrency(1000, 'de_AT');

// '$ ١٬٠٠٠٫٠٠' と表示します
echo $currency->toCurrency(1000, 'Arab');]]>
            </programlisting>

        </example>
    </sect2>

    <sect2 id="zend.currency.useage.setformat">

        <title>通貨の表示形式の変更</title>

        <para>
            <code>Zend_Currency</code> の作成時に指定したフォーマットが、
            当然標準の表示形式となります。しかし、ときにはそれを変更したくなることもあるでしょう。
        </para>

        <para>
            通貨の出力形式には、以下の要素があります。
        </para>

        <itemizedlist mark='opencircle'>
            <listitem>
                <para>
                    <emphasis role="strong">通貨記号、略称、あるいは名前</emphasis>:
                </para>
                <para>
                    通常は、通貨の出力時には通貨記号が表示されます。
                    必要に応じてこれを省略したり他の内容で置き換えたりすることができます。
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">通貨記号の位置</emphasis>:
                </para>
                <para>
                    通貨記号の位置は、通常はロケールに応じて自動的に決まります。
                    必要に応じて、これを変更することができます。
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">文字</emphasis>:
                </para>
                <para>
                    数値を表示する際に使用する文字です。詳細な情報は、
                    <code>Zend_Locale</code> のドキュメントにある
                    <link linkend="zend.locale.appendix.numberscripts.supported">サポートする数値系</link>
                    を参照ください。
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">数値フォーマット</emphasis>:
                </para>
                <para>
                    通貨の量 (要するに、金額のことです) を表す際には、
                    そのロケールのフォーマット規則に合わせた表記になります。
                    たとえば、英語圏では 3 桁ごとの桁区切り文字に ',' を使用しますが、
                    ドイツでは '.' を使用します。
                </para>
            </listitem>
        </itemizedlist>

        <para>
            出力形式を変更したい場合は
            <emphasis role="strong">setFormat()</emphasis> メソッドを使用します。
            パラメータを省略した場合は、実際のロケールあるいは設定されているロケールの標準設定を使用します。
            <code>setFormat</code> がサポートする設定項目は次のとおりです。
        </para>

        <itemizedlist mark='opencircle'>
            <listitem>
                <para>
                    <emphasis role="strong">rules</emphasis>:
                </para>
                <para>
                    このパラメータは、通貨記号あるいは名前のどれをどの位置に表示するのかを選択します。
                    詳細は以下で説明します。
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">script</emphasis>:
                </para>
                <para>
                    このパラメータは、数字の表示に使用する文字の種類を選択します。
                    大半のロケールではデフォルトは 'Latn' です。しかし
                    'Arab' (アラビア数字) のような別の文字もサポートしています。
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">locale</emphasis>:
                </para>
                <para>
                    このパラメータは、数値の表示形式を決める際に使用するロケールを選択します。
                </para>
            </listitem>
        </itemizedlist>

        <para>
            パラメータ 'rules' に指定するのは、文字列あるいは以下の定数のいずれかです。
            これにより、通貨記号をどの位置に表示するのか、
            そして実際にどんな内容を表示するのかが決まります。
            文字列を指定すると、それまでに設定されていた通貨記号あるいは通貨名が上書きされます。
        </para>

        <table id="zend.currency.useage.setformat.constantsdescription">

            <title>通貨記号の設定を指定するための定数</title>

            <tgroup cols="3" align="left">
                <thead>
                    <row>
                        <entry>定数</entry>
                        <entry>値</entry>
                        <entry>説明</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>NO_SYMBOL</entry>
                        <entry>1</entry>
                        <entry>通貨を表す内容を表示しない</entry>
                    </row>
                    <row>
                        <entry>USE_SYMBOL</entry>
                        <entry>2</entry>
                        <entry>通貨記号を表示する</entry>
                    </row>
                    <row>
                        <entry>USE_SHORTNAME</entry>
                        <entry>3</entry>
                        <entry>3 文字で表される通過名の略称を表示する</entry>
                    </row>
                    <row>
                        <entry>USE_NAME</entry>
                        <entry>4</entry>
                        <entry>通貨の名称を表示する</entry>
                    </row>
                </tbody>
            </tgroup>

        </table>

        <table id="zend.currency.useage.setformat.constantsposition">

            <title>表示する場所を指定するための定数</title>

            <tgroup cols="3" align="left">
                <thead>
                    <row>
                        <entry>定数</entry>
                        <entry>値</entry>
                        <entry>説明</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>STANDARD</entry>
                        <entry>8</entry>
                        <entry>そのロケールにおける標準の位置に表示する</entry>
                    </row>
                    <row>
                        <entry>RIGHT</entry>
                        <entry>16</entry>
                        <entry>通貨の値の右側に表示する</entry>
                    </row>
                    <row>
                        <entry>LEFT</entry>
                        <entry>32</entry>
                        <entry>通貨の値の左側に表示する</entry>
                    </row>
                </tbody>
            </tgroup>

        </table>

        <example id="zend.currency.useage.setformat.example">

            <title>通貨の表示形式の変更</title>

            <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Currency.php';

// 'en_US' でインスタンスを作成します。これは 'USD'、'Latin' そして 'en_US' を使用します (これらは 'en_US' のデフォルトです)
$currency = new Zend_Currency('en_US');

// 'US$ 1,000.00' と表示します
echo $currency->toCurrency(1000);

$currency->setFormat(Zend_Currency::USE_NAME&Zend_Currency::RIGHT);
// '1.000,00 US Dollar' と表示します
echo $currency->toCurrency(1000);

$currency->setFormat("American Dollar");
// '1.000,00 American Dollar' と表示します
echo $currency->toCurrency(1000);]]>
            </programlisting>

        </example>
    </sect2>

    <sect2 id="zend.currency.useage.informational">

        <title>Zend_Currency の情報取得用メソッド</title>

        <para>
            もちろん、<code>Zend_Currency</code>
            では通貨に関する情報を <code>Zend_Locale</code>
            から取得するメソッドもサポートしています。これらを使用すると、
            現在用いられている通貨だけでなく以前に使われていたものについての情報も得ることができます。
            以下のようなメソッドが存在します。
        </para>

        <itemizedlist mark='opencircle'>
            <listitem>
                <para>
                    <emphasis role="strong">getSymbol()</emphasis>:
                </para>
                <para>
                    実際の通貨あるいは指定した通貨を表す通貨記号を返します。たとえば、
                    '<emphasis role="strong">en_US</emphasis>
                    ロケールにおける米ドルを表す記号は
                    <emphasis role="strong">$</emphasis> です。
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">getShortName()</emphasis>:
                </para>
                <para>
                    実際の通貨あるいは指定した通貨の短い名前を返します。たとえば、
                    '<emphasis role="strong">en_US</emphasis>
                    ロケールにおける米ドルの短い名前は
                    <emphasis role="strong">USD</emphasis> です。
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">getName()</emphasis>:
                </para>
                <para>
                    実際の通貨あるいは指定した通貨の完全な名前を返します。たとえば、
                    '<emphasis role="strong">en_US</emphasis>
                    ロケールにおける米ドルの完全な名前は
                    <emphasis role="strong">US Dollar</emphasis> です。
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">getRegionList()</emphasis>:
                </para>
                <para>
                    実際の通貨あるいは指定した通貨が用いられている地域の一覧を返します。
                    ひとつの通貨が複数の地域で用いられている可能性もあるので、
                    返り値は常に配列となります。
                </para>
            </listitem>
            <listitem>
                <para>
                    <emphasis role="strong">getCurrencyList()</emphasis>:
                </para>
                <para>
                    指定した地域で用いられている通貨の一覧を返します。
                </para>
            </listitem>
        </itemizedlist>

        <para>
            関数 <code>getSymbol()</code>、<code>getShortName()</code>
            および <code>getName()</code> には、それぞれオプションのパラメータを
            2 つ指定することができます。パラメータを省略した場合は、
            現在実際に設定されている通貨に対応するデータが返されます。
            最初のパラメータには短い形式の通貨名を指定します。
            これは常に 3 文字で、たとえばユーロなら EUR、
            米ドルなら USD となります。2 番目のパラメータには、
            どのロケールからデータを読み込むのかを指定します。
            これを省略した場合は、現在実際に設定されているロケールを使用します。
        </para>

        <example id="zend.currency.useage.informational.example">

            <title>通貨に関する情報の取得</title>

            <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Currency.php';

// 'en_US' でインスタンスを作成します。これは 'USD'、'Latin' そして 'en_US' を使用します (これらは 'en_US' のデフォルトです)
$currency = new Zend_Currency('en_US');

// '$' と表示します
echo $currency->getSymbol();

// 'EUR' と表示します
echo $currency->getShortName('EUR');

// 'Österreichische Schilling' と表示します
echo $currency->getName('ATS', 'de_AT');

// USD (米ドル) を使用しているすべての地域を配列で返します
print_r($currency->getRegionList();

// この地域で用いられているすべての通貨を配列で返します
print_r($currency->getCurrencyList('de_AT');]]>
            </programlisting>

        </example>

    </sect2>

    <sect2 id="zend.currency.useage.cache">

        <title>Zend_Currency の高速化</title>

        <para>
            <code>Zend_Currency</code> による作業を高速化するには
            <code>Zend_Cache</code> を使用します。これを使用するには、
            静的メソッド <code>Zend_Currency::setCache($cache)</code>
            に <code>Zend_Cache</code> アダプタを指定します。そうすると、
            Zend_Currency のメソッドで地域化したデータがキャッシュされるようになります。
        </para>

    </sect2>

</sect1>