<sect1 id="zend.mail.introduction">
    <title>Wprowadzenie</title>
    <para>
        <code>Zend_Mail</code> zapewnia możliwość tworzenia i wysyłania tekstowych
        wiadomości e-mail oraz wieloczęściowych wiadomości e-mail zgodnych z MIME.
        Wiadomość może być wysłana przez <code>Zend_Mail</code> za pomocą wbudowanej
        funkcji PHP <ulink url="http://php.net/mail"><code>mail()</code></ulink>
        lub za pomocą zdalnego połączenia SMTP.
    </para>
    <example>
        <title>Wysyłanie prostego e-maila za pomocą Zend_Mail</title>
        <para>
            Prosty e-mail składa się z odbiorców, z tematu, treści i z nadawcy. Aby wysłać taki
            e-mail używając funkcji PHP <ulink url="http://php.net/mail"><code>mail()</code></ulink>
            możesz zrobić to w ten sposób:
        </para>
        <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Mail.php';
$mail = new Zend_Mail();
$mail->setBodyText('Treść wiadomości e-mail.');
$mail->setFrom('somebody@example.com', 'Nadawca');
$mail->addTo('somebody_else@example.com', 'Odbiorca');
$mail->setSubject('Testowy Temat');
$mail->send();
?>]]>   </programlisting>
    </example>
    <note>
        <title>Minimalne definicje</title>
        <para>
            Aby wysłać e-mail za pomocą <code>Zend_Mail</code> musisz określić chociaż
            jednego odbiorcę, nadawcę (np., za pomocą <code>setFrom()</code>), i treść
            wiadomości (tekst i/lub HTML).
        </para>
    </note>
    <para>
         Dla większości atrybutów obiektu mail są dostępne metody "get" w służące do
         odczytywania przechowywanych w nim informacji. Więcej informacji można znaleść
         w dokumentacji API. Specjalną metodą jest <code>getRecipients()</code>. Zwraca
         ona tablicę w wszystkimi adresami e-mail odbiorców, które zostały dodane.
    </para>
    <para>
        Ze względów bezpieczeństwa, <code>Zend_Mail</code> filtruje wszystkie nagłówki
        aby zapobiec dołączeniu niechcianych nagłówków za pomocą znaku nowej linii
        (<code>\n</code>).
    </para>
    <para>
        You also can use most methods of the Zend_Mail object with a convenient fluent interface. A fluent
        interface means that each method returns a reference to the object on which it was called, so you can
        immediately call another method.
    </para>
        <programlisting role="php"><![CDATA[<?php
require_once 'Zend/Mail.php';
$mail = new Zend_Mail();
$mail->setBodyText('This is the text of the mail.')
    ->setFrom('somebody@example.com', 'Some Sender')
    ->addTo('somebody_else@example.com', 'Some Recipient')
    ->setSubject('TestSubject')
    ->send();
?>]]>   </programlisting>
</sect1>
<!--
vim:se ts=4 sw=4 et:
-->