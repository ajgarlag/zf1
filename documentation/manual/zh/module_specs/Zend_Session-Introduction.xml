<sect1 id="zend.session.introduction">

    <title>简介</title>

    <para>
        参见<ulink url="http://framework.zend.com/wiki/display/ZFDOC/Zend_Session">最新发布的文档</ulink>。Zend Framework Auth团队也非常期望在我们的邮件列表中（<ulink url="mailto:fw-auth@lists.zend.com">fw-auth@lists.zend.com</ulink>）发表你的反馈和捐赠。
    </para>

    <para>
        在基于PHP开发的Web应用程序中，<emphasis role="bold">会话(session)</emphasis>表现了服务器端(持久的状态数据)和特定的用户代理(user agent)客户端(比如web浏览器)之间的一对一的关系。Zend_Session用来在由相同客户端发起的多个页面请求之间，管理和保护会话数据（在逻辑上，会话数据是cookie数据的扩展）。不像cookie数据，会话数据不储存在客户端，且仅当服务器端程序源代码使得会话数据可用，才通过回应来自客户端的请求与客户端共享会话数据。这个组件及其文档的目的是，使用<code>Zend_Session</code>组件来管理被称之为服务器端数据的会话数据，个别会话数据被<code>Zend_Session_Namespace</code>访问器对象操作。<emphasis role="bold">会话命名空间(Session Namespaces)</emphasis>提供了使用经典的<ulink url="http://en.wikipedia.org/wiki/Namespace_%28computer_science%29">命名空间</ulink>方式来访问会话数据，命名空间逻辑上就是一系列被命名（键名为字符串）的联合数组（类似于普通的PHP数组）。
    </para>

    <para>
        <code>Zend_Session_Namespace</code>创建<code>$_SESSION[]</code>中命名空间的访问器对象实例。<code>Zend_Session</code>组件包装了PHP内置的会话模块，提供了一个管理会话的接口，也为<code>Zend_Session_Namespace</code>持久化命名空间数据提供了API。<code>Zend_Session_Namespace</code>为会话命名空间数据到PHP内部会话机制的持久化提供了一个标准的、面向对象的接口。<code>Zend_Session</code>支持现有无名的会话，同时也支持“登录会话”。ZF的用户验证组件<code>Zend_Auth</code>，使用了<code>Zend_Session_Namespace</code>，把用户的鉴别信息储存到了"Zend_Auth"命名空间下。因为<code>Zend_Session</code>使用了PHP内置的会话函数，常用的配置选项和设置都仍然适用(请参考<ulink url="http://www.php.net/session">http://www.php.net/session</ulink>)。如此，储存在cookie或者URL中的会话标识，保持了客户端与服务器端会话状态数据之间的联系。
    </para>

    <para>
        PHP默认的<ulink url="http://www.php.net/manual/en/function.session-set-save-handler.php">session_save_handler函数</ulink>没有解决当客户端连接到了集群服务器中的一些服务器的情况下，保持客户端与服务器端会话状态数据之间联系的问题，因为会话状态数据只能储存在本地服务器当中（译注：也就是在各服务器间不能共享session数据）。当一组附加的且合理的save handlers可用时，我们会提供它。我们鼓励社区成员在我们的邮件列表<ulink url="mailto:fw-auth@lists.zend.com">fw-auth@lists.zend.com</ulink>中发表你的建议或者提交save handlers。与Zend_Db兼容的save handler已经发表在邮件列表中。
    </para>

</sect1>
