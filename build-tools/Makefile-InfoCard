#
# Zend Framework
#
# LICENSE
#
# This source file is subject to the new BSD license that is bundled
# with this package in the file LICENSE.txt.
# It is also available through the world-wide-web at this URL:
# http://framework.zend.com/license/new-bsd
# If you did not receive a copy of the license and are unable to
# obtain it through the world-wide-web, please send an email
# to license@zend.com so we can send you a copy immediately.
#
# @copyright  Copyright (c) 2005-2007 Zend Technologies USA Inc. (http://www.zend.com)
# @license    http://framework.zend.com/license/new-bsd     New BSD License
# @version    $Id: Makefile-InfoCard 8769 2008-03-12 03:04:28Z alexander $

#
# Makefile - build Zend Framework product and documentation
#
# Make targets:
#  dist - build all release packages in one step.
#    export - get files from subversion.
#    stage - produce staged product tree in one step.
#      stage-files - copy files from export tree.
#      stage-docs - build and stage the DocBook and PHP API documentation in one step.
#        docbook - build and stage manual from DocBook sources.
#        phpdoc - build and stage API doc using phpDocumentor.
#      stage-version - create staged VERSION.txt for the release packages.
#    zip - produce zip packages from staged tree.
#    tar - produce tar.gz packages from staged tree.
#  clean - remove staged files.
#  clean-docbook - remove temp files under docbook sources.
#  clean-export - remove exported product tree.
#

# -- parameters you are likely to want to change --

# PHPDOC is the command to run to run phpDocumentor.  This can simply
# be 'phpdoc' if phpDocumentor is in your PATH.  On Cygwin, you can
# run 'php' with the phpdoc script as the argument, in Windows-style
# path format; e.g., "C:/php/phpdoc".
PHPDOC=phpdoc

# ZF_SVN_REVISION is the Subversion revision number used for exporting
# the release files. ZF_SVN_DIR is the path to the directory in SVN
# from which the release should be created, relative to the repository
# location (e.g., tag/release-1.0.3).
ZF_SVN_REVISION=9052
ZF_SVN_DIR=tag/release-1.5.1

# ZF_VERSION is the release version string to build.  This is added
# to the VERSION.txt file, and is also used for the name of the
# staging directory and the names of the zip and tarball files.
ZF_VERSION=1.5.1

# For ZF_LANG, use '*' if you want to build all manual translations.
# If you want to build one language, use one of the names of language
# directories (e.g., 'en', 'de').  You also can use any file-globbing
# pattern.
ZF_LANG=en

# Locations of the DocBook DTD and XSL stylesheets
DTD_HOST=framework.zend.com
DTD_URL=http://$(DTD_HOST)/docbook/xml/4.4/docbookx.dtd
XSL_HOST=framework.zend.com
XSL_URL=http://$(XSL_HOST)/docbook-xsl/html/chunk.xsl

# -- end of parameters you are likely to want to change --

SVN=svn
SVN_USER=
SVN_PASS=

ZF_SVN_URL=http://framework.zend.com/svn/framework/$(ZF_SVN_DIR)
ZF_EXPORT_DIR=./ZendFramework-export-$(ZF_SVN_REVISION)
INFOCARD_PRODUCT_NAME=Zend InfoCard
INFOCARD_PRODUCTNAME=ZendInfoCard
INFOCARD_PRODUCT=$(INFOCARD_PRODUCTNAME)-$(ZF_VERSION)
INFOCARD_EXPORT_DIR=./$(INFOCARD_PRODUCTNAME)-export-$(ZF_SVN_REVISION)
STAGE_HOME=stage
INFOCARD_STAGE_DIR=$(STAGE_HOME)/$(INFOCARD_PRODUCT)

ZIP=zip
INFOCARD_ZIPBALL=$(INFOCARD_PRODUCT).zip
TAR=tar
INFOCARD_TARBALL=$(INFOCARD_PRODUCT).tar.gz

API_DOC_DEST=$(INFOCARD_STAGE_DIR)/documentation/api/core
API_DOC_TITLE_CORE=Zend InfoCard API Documentation
API_DOC_TITLE_INCUBATOR=Zend InfoCard API Incubator Documentation
API_DOC_OUTPUT_STYLE=HTML:frames:DOM/earthli

.PHONY: clean clean-docbook clean-export

dist: export stage zip tar

export:
	@echo "Exporting files from SVN..."
	@if [ -d "$(ZF_EXPORT_DIR)" ] ; then \
	    echo "Export directory already exists ($(ZF_EXPORT_DIR))" ; \
	else \
	    $(SVN) export -r $(ZF_SVN_REVISION) --force --config-dir ~/.subversion $(ZF_SVN_URL) $(ZF_EXPORT_DIR) ; \
	fi
	@echo "...Done exporting files from SVN."

stage: stage-files stage-docs stage-version

stage-files:
	@echo "Staging files..."
	-mkdir -p $(INFOCARD_STAGE_DIR)
	@echo "...copying set of files for Zend InfoCard distribution..."
	@(pwd=`pwd` ; cd $(ZF_EXPORT_DIR) && rsync --quiet --archive \
	    --delete --exclude=.svn --recursive \
	    --files-from="$$pwd/include-files-infocard" \
	    ./ $$pwd/$(INFOCARD_EXPORT_DIR))
	@echo "...altering documentation/manual/en/manual.xml.in..."
	@mv $(INFOCARD_EXPORT_DIR)/documentation/manual/en/manual.xml.in \
	    $(INFOCARD_EXPORT_DIR)/documentation/manual/en/manual.xml.in.orig
	@awk '{ \
	    if ($$0 ~ /chapter|title|module_specs|[^h]ref/ && $$0 !~ /[Ii]nfo[Cc]ard|subtitle|Reference Guide|<!--|imagedata/ && infocard == 0) \
		{ print "<!--", $$0, "-->"; } \
	    else \
		{ sub(/Zend Framework/, "Zend InfoCard", $$0); print; } \
	    if ($$0 ~ /[Ii]nfo[Cc]ard/) infocard = 1; else infocard = 0; \
	    }' \
	    $(INFOCARD_EXPORT_DIR)/documentation/manual/en/manual.xml.in.orig > \
	    $(INFOCARD_EXPORT_DIR)/documentation/manual/en/manual.xml.in
	@echo "...altering tests/Zend/AllTests.php..."
	@mv $(INFOCARD_EXPORT_DIR)/tests/Zend/AllTests.php \
	    $(INFOCARD_EXPORT_DIR)/tests/Zend/AllTests-orig.php
	@awk '{ \
	    if ($$0 ~ /require_once .Zend|addTest/ && $$0 !~ /[Ii]nfo[Cc]ard/) \
		{ } \
	    else \
		{ print; } \
	    }' \
	    $(INFOCARD_EXPORT_DIR)/tests/Zend/AllTests-orig.php > \
	    $(INFOCARD_EXPORT_DIR)/tests/Zend/AllTests.php
	@echo "...altering README.txt..."
	@mv $(INFOCARD_EXPORT_DIR)/README.txt \
	    $(INFOCARD_EXPORT_DIR)/README-orig.txt
	@sed -e 's/Zend Framework/Zend InfoCard/' -e 's/ZEND FRAMEWORK/ZEND INFOCARD/' \
	    $(INFOCARD_EXPORT_DIR)/README-orig.txt > \
	    $(INFOCARD_EXPORT_DIR)/README.txt
	@echo "...staging files..."
	@(pwd=`pwd` ; cd $(INFOCARD_EXPORT_DIR) && rsync --quiet --archive \
	    --delete --exclude-from="$$pwd/exclude-files-infocard" ./ $$pwd/$(INFOCARD_STAGE_DIR))
	@echo "...Done staging files."

stage-docs: docbook phpdoc

docbook: docbook-core

docbook-core:
	-mkdir -p $(INFOCARD_STAGE_DIR)/documentation/manual/core
	@for language in $(INFOCARD_EXPORT_DIR)/documentation/manual/$(ZF_LANG) ; do \
	    [ -d $$language ] || continue ; \
	    lang=`basename $$language` ; \
	    echo "== BUILDING AND STAGING END-USER DOCUMENTATION [CORE] (language: $$lang) ==" ; \
	    ( cd $$language && autoconf && sh ./configure && $(MAKE) -e clean html ) ; \
	    rsync --archive --delete $$language/html/ $(INFOCARD_STAGE_DIR)/documentation/manual/core/$$lang ; \
	done

phpdoc: phpdoc-core

phpdoc-core:
	@echo "== BUILDING AND STAGING API DOCUMENTATION (CORE) =="
	-mkdir -p $(INFOCARD_STAGE_DIR)/documentation/api/core
	@if [ ! -f $(INFOCARD_STAGE_DIR)/documentation/api/core/index.html -o `find $(INFOCARD_STAGE_DIR)/library -newer $(INFOCARD_STAGE_DIR)/documentation/api/core/index.html 2>/dev/null | wc -l` -gt 0 ] ; then \
	    $(PHPDOC) --quiet off \
	      --target $(INFOCARD_STAGE_DIR)/documentation/api/core \
	      --directory $(INFOCARD_STAGE_DIR)/library \
	      --title "$(API_DOC_TITLE_CORE)" \
	      --output $(API_DOC_OUTPUT_STYLE) ; \
	else \
	    echo "...core API documentation is up to date." ; \
	fi

stage-version:
	@echo "Adding SVN revision and release date to release notes..."
	@sed -e 's/\[INSERT REV NUMBER HERE\]/$(ZF_SVN_REVISION)/' \
	    < $(INFOCARD_STAGE_DIR)/README.txt \
	    > $(INFOCARD_STAGE_DIR)/README.txt.new
	@ZF_RELEASE_DATE=`date +%Y-%m-%d` ; sed -e "s/\[INSERT DATE HERE\]/$$ZF_RELEASE_DATE/" \
	    < $(INFOCARD_STAGE_DIR)/README.txt.new \
	    > $(INFOCARD_STAGE_DIR)/README.txt
	@rm $(INFOCARD_STAGE_DIR)/README.txt.new
	@echo "...Done adding SVN revision and release date to release notes."

zip:
	@echo "== CREATING ZIP ARCHIVE =="
	(cd $(STAGE_HOME) && $(ZIP) -rq $(INFOCARD_ZIPBALL) $(INFOCARD_PRODUCT))

tar:
	@echo "== CREATING TAR.GZ ARCHIVE =="
	(cd $(STAGE_HOME) && $(TAR) -czf $(INFOCARD_TARBALL) $(INFOCARD_PRODUCT))

clean:
	-rm -rf $(INFOCARD_STAGE_DIR)
	-rm -f $(INFOCARD_ZIPBALL)
	-rm -f $(INFOCARD_TARBALL)

clean-docbook:
	for language in $(INFOCARD_EXPORT_DIR)/documentation/manual/$(ZF_LANG)/ ; do \
	    ( cd $$language && make cleanall ) \
	done

clean-export:
	-rm -rf $(INFOCARD_EXPORT_DIR)
